# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaSceneLighting

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SceneShadowManager(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SceneShadowManager()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSceneShadowManager(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SceneShadowManager
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SceneShadowManager
    def Shadows(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from DeepSeaSceneLighting.SceneLightShadows import SceneLightShadows
            obj = SceneLightShadows()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SceneShadowManager
    def ShadowsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # SceneShadowManager
    def ShadowsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def Start(builder): builder.StartObject(1)
def SceneShadowManagerStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddShadows(builder, shadows): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(shadows), 0)
def SceneShadowManagerAddShadows(builder, shadows):
    """This method is deprecated. Please switch to AddShadows."""
    return AddShadows(builder, shadows)
def StartShadowsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def SceneShadowManagerStartShadowsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartShadowsVector(builder, numElems)
def End(builder): return builder.EndObject()
def SceneShadowManagerEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)