# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaSceneLighting

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class InstanceForwardLightData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsInstanceForwardLightData(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = InstanceForwardLightData()
        x.Init(buf, n + offset)
        return x

    # InstanceForwardLightData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # InstanceForwardLightData
    def VariableGroupDescName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # InstanceForwardLightData
    def LightSet(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def InstanceForwardLightDataStart(builder): builder.StartObject(2)
def InstanceForwardLightDataAddVariableGroupDescName(builder, variableGroupDescName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(variableGroupDescName), 0)
def InstanceForwardLightDataAddLightSet(builder, lightSet): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(lightSet), 0)
def InstanceForwardLightDataEnd(builder): return builder.EndObject()
