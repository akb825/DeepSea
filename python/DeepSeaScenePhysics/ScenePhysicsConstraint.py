# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScenePhysics

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenePhysicsConstraint(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenePhysicsConstraint()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenePhysicsConstraint(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenePhysicsConstraint
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenePhysicsConstraint
    def Constraint(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # ScenePhysicsConstraint
    def ConstraintAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # ScenePhysicsConstraint
    def ConstraintLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ScenePhysicsConstraint
    def ConstraintIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # ScenePhysicsConstraint
    def FirstRigidBodyInstance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenePhysicsConstraint
    def FirstConnectedConstraintInstance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenePhysicsConstraint
    def SecondRigidBodyInstance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenePhysicsConstraint
    def SecondConnectedConstraintInstance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ScenePhysicsConstraintStart(builder):
    builder.StartObject(5)

def Start(builder):
    ScenePhysicsConstraintStart(builder)

def ScenePhysicsConstraintAddConstraint(builder, constraint):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(constraint), 0)

def AddConstraint(builder, constraint):
    ScenePhysicsConstraintAddConstraint(builder, constraint)

def ScenePhysicsConstraintStartConstraintVector(builder, numElems):
    return builder.StartVector(1, numElems, 1)

def StartConstraintVector(builder, numElems):
    return ScenePhysicsConstraintStartConstraintVector(builder, numElems)

def ScenePhysicsConstraintAddFirstRigidBodyInstance(builder, firstRigidBodyInstance):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(firstRigidBodyInstance), 0)

def AddFirstRigidBodyInstance(builder, firstRigidBodyInstance):
    ScenePhysicsConstraintAddFirstRigidBodyInstance(builder, firstRigidBodyInstance)

def ScenePhysicsConstraintAddFirstConnectedConstraintInstance(builder, firstConnectedConstraintInstance):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(firstConnectedConstraintInstance), 0)

def AddFirstConnectedConstraintInstance(builder, firstConnectedConstraintInstance):
    ScenePhysicsConstraintAddFirstConnectedConstraintInstance(builder, firstConnectedConstraintInstance)

def ScenePhysicsConstraintAddSecondRigidBodyInstance(builder, secondRigidBodyInstance):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(secondRigidBodyInstance), 0)

def AddSecondRigidBodyInstance(builder, secondRigidBodyInstance):
    ScenePhysicsConstraintAddSecondRigidBodyInstance(builder, secondRigidBodyInstance)

def ScenePhysicsConstraintAddSecondConnectedConstraintInstance(builder, secondConnectedConstraintInstance):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(secondConnectedConstraintInstance), 0)

def AddSecondConnectedConstraintInstance(builder, secondConnectedConstraintInstance):
    ScenePhysicsConstraintAddSecondConnectedConstraintInstance(builder, secondConnectedConstraintInstance)

def ScenePhysicsConstraintEnd(builder):
    return builder.EndObject()

def End(builder):
    return ScenePhysicsConstraintEnd(builder)
