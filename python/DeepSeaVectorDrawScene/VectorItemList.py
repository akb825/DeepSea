# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDrawScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VectorItemList(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = VectorItemList()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsVectorItemList(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # VectorItemList
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VectorItemList
    def InstanceData(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from DeepSeaScene.ObjectData import ObjectData
            obj = ObjectData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # VectorItemList
    def InstanceDataLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # VectorItemList
    def InstanceDataIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # VectorItemList
    def DynamicRenderStates(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from DeepSeaScene.DynamicRenderStates import DynamicRenderStates
            obj = DynamicRenderStates()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(2)
def VectorItemListStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddInstanceData(builder, instanceData): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(instanceData), 0)
def VectorItemListAddInstanceData(builder, instanceData):
    """This method is deprecated. Please switch to AddInstanceData."""
    return AddInstanceData(builder, instanceData)
def StartInstanceDataVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def VectorItemListStartInstanceDataVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartInstanceDataVector(builder, numElems)
def AddDynamicRenderStates(builder, dynamicRenderStates): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(dynamicRenderStates), 0)
def VectorItemListAddDynamicRenderStates(builder, dynamicRenderStates):
    """This method is deprecated. Please switch to AddDynamicRenderStates."""
    return AddDynamicRenderStates(builder, dynamicRenderStates)
def End(builder): return builder.EndObject()
def VectorItemListEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)