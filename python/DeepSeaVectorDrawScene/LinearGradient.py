# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDrawScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LinearGradient(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LinearGradient()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLinearGradient(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LinearGradient
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LinearGradient
    def Start(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaScene.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # LinearGradient
    def End(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaScene.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # LinearGradient
    def Edge(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # LinearGradient
    def CoordinateSpace(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # LinearGradient
    def Transform(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaScene.Matrix33f import Matrix33f
            obj = Matrix33f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # LinearGradient
    def Stops(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from DeepSeaVectorDrawScene.GradientStop import GradientStop
            obj = GradientStop()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # LinearGradient
    def StopsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # LinearGradient
    def StopsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

def Start(builder): builder.StartObject(6)
def LinearGradientStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddStart(builder, start): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(start), 0)
def LinearGradientAddStart(builder, start):
    """This method is deprecated. Please switch to AddStart."""
    return AddStart(builder, start)
def AddEnd(builder, end): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(end), 0)
def LinearGradientAddEnd(builder, end):
    """This method is deprecated. Please switch to AddEnd."""
    return AddEnd(builder, end)
def AddEdge(builder, edge): builder.PrependUint8Slot(2, edge, 0)
def LinearGradientAddEdge(builder, edge):
    """This method is deprecated. Please switch to AddEdge."""
    return AddEdge(builder, edge)
def AddCoordinateSpace(builder, coordinateSpace): builder.PrependUint8Slot(3, coordinateSpace, 0)
def LinearGradientAddCoordinateSpace(builder, coordinateSpace):
    """This method is deprecated. Please switch to AddCoordinateSpace."""
    return AddCoordinateSpace(builder, coordinateSpace)
def AddTransform(builder, transform): builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(transform), 0)
def LinearGradientAddTransform(builder, transform):
    """This method is deprecated. Please switch to AddTransform."""
    return AddTransform(builder, transform)
def AddStops(builder, stops): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(stops), 0)
def LinearGradientAddStops(builder, stops):
    """This method is deprecated. Please switch to AddStops."""
    return AddStops(builder, stops)
def StartStopsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def LinearGradientStartStopsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStopsVector(builder, numElems)
def End(builder): return builder.EndObject()
def LinearGradientEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)