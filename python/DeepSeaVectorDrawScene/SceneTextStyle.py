# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDrawScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SceneTextStyle(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSceneTextStyle(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SceneTextStyle()
        x.Init(buf, n + offset)
        return x

    # SceneTextStyle
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SceneTextStyle
    def Start(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # SceneTextStyle
    def Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # SceneTextStyle
    def Size(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SceneTextStyle
    def Embolden(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SceneTextStyle
    def Slant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SceneTextStyle
    def OutlineWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SceneTextStyle
    def Fuziness(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SceneTextStyle
    def VerticalOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SceneTextStyle
    def Color(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDrawScene.Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SceneTextStyle
    def OutlineColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDrawScene.Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def SceneTextStyleStart(builder): builder.StartObject(10)
def SceneTextStyleAddStart(builder, start): builder.PrependUint32Slot(0, start, 0)
def SceneTextStyleAddCount(builder, count): builder.PrependUint32Slot(1, count, 0)
def SceneTextStyleAddSize(builder, size): builder.PrependFloat32Slot(2, size, 0.0)
def SceneTextStyleAddEmbolden(builder, embolden): builder.PrependFloat32Slot(3, embolden, 0.0)
def SceneTextStyleAddSlant(builder, slant): builder.PrependFloat32Slot(4, slant, 0.0)
def SceneTextStyleAddOutlineWidth(builder, outlineWidth): builder.PrependFloat32Slot(5, outlineWidth, 0.0)
def SceneTextStyleAddFuziness(builder, fuziness): builder.PrependFloat32Slot(6, fuziness, 0.0)
def SceneTextStyleAddVerticalOffset(builder, verticalOffset): builder.PrependFloat32Slot(7, verticalOffset, 0.0)
def SceneTextStyleAddColor(builder, color): builder.PrependStructSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(color), 0)
def SceneTextStyleAddOutlineColor(builder, outlineColor): builder.PrependStructSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(outlineColor), 0)
def SceneTextStyleEnd(builder): return builder.EndObject()
