# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaSceneVectorDraw

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ColorTable(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ColorTable()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsColorTable(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ColorTable
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ColorTable
    def Red(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ColorTable
    def Green(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ColorTable
    def Blue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ColorTable
    def Alpha(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def ColorTableStart(builder):
    builder.StartObject(4)

def Start(builder):
    ColorTableStart(builder)

def ColorTableAddRed(builder, red):
    builder.PrependUint8Slot(0, red, 0)

def AddRed(builder, red):
    ColorTableAddRed(builder, red)

def ColorTableAddGreen(builder, green):
    builder.PrependUint8Slot(1, green, 0)

def AddGreen(builder, green):
    ColorTableAddGreen(builder, green)

def ColorTableAddBlue(builder, blue):
    builder.PrependUint8Slot(2, blue, 0)

def AddBlue(builder, blue):
    ColorTableAddBlue(builder, blue)

def ColorTableAddAlpha(builder, alpha):
    builder.PrependUint8Slot(3, alpha, 0)

def AddAlpha(builder, alpha):
    ColorTableAddAlpha(builder, alpha)

def ColorTableEnd(builder):
    return builder.EndObject()

def End(builder):
    return ColorTableEnd(builder)
