# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDraw

import flatbuffers

class ImageCommand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsImageCommand(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ImageCommand()
        x.Init(buf, n + offset)
        return x

    # ImageCommand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ImageCommand
    def Image(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ImageCommand
    def UpperLeft(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ImageCommand
    def LowerRight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = o + self._tab.Pos
            from .Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ImageCommand
    def Opacity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ImageCommand
    def Transform(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from .Matrix33f import Matrix33f
            obj = Matrix33f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ImageCommandStart(builder): builder.StartObject(5)
def ImageCommandAddImage(builder, image): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(image), 0)
def ImageCommandAddUpperLeft(builder, upperLeft): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(upperLeft), 0)
def ImageCommandAddLowerRight(builder, lowerRight): builder.PrependStructSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(lowerRight), 0)
def ImageCommandAddOpacity(builder, opacity): builder.PrependFloat32Slot(3, opacity, 0.0)
def ImageCommandAddTransform(builder, transform): builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(transform), 0)
def ImageCommandEnd(builder): return builder.EndObject()
