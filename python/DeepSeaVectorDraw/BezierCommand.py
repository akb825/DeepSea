# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDraw

import flatbuffers

class BezierCommand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsBezierCommand(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BezierCommand()
        x.Init(buf, n + offset)
        return x

    # BezierCommand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BezierCommand
    def Control1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from .Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # BezierCommand
    def Control2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # BezierCommand
    def End(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = o + self._tab.Pos
            from .Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def BezierCommandStart(builder): builder.StartObject(3)
def BezierCommandAddControl1(builder, control1): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(control1), 0)
def BezierCommandAddControl2(builder, control2): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(control2), 0)
def BezierCommandAddEnd(builder, end): builder.PrependStructSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(end), 0)
def BezierCommandEnd(builder): return builder.EndObject()
