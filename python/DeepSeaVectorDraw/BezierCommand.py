# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDraw

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BezierCommand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BezierCommand()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBezierCommand(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BezierCommand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BezierCommand
    def Control1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDraw.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # BezierCommand
    def Control2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDraw.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # BezierCommand
    def End(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDraw.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def BezierCommandStart(builder):
    builder.StartObject(3)

def Start(builder):
    BezierCommandStart(builder)

def BezierCommandAddControl1(builder, control1):
    builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(control1), 0)

def AddControl1(builder, control1):
    BezierCommandAddControl1(builder, control1)

def BezierCommandAddControl2(builder, control2):
    builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(control2), 0)

def AddControl2(builder, control2):
    BezierCommandAddControl2(builder, control2)

def BezierCommandAddEnd(builder, end):
    builder.PrependStructSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(end), 0)

def AddEnd(builder, end):
    BezierCommandAddEnd(builder, end)

def BezierCommandEnd(builder):
    return builder.EndObject()

def End(builder):
    return BezierCommandEnd(builder)
