# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaVectorDraw

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RectangleCommand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RectangleCommand()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRectangleCommand(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RectangleCommand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RectangleCommand
    def UpperLeft(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDraw.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RectangleCommand
    def LowerRight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDraw.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RectangleCommand
    def CornerRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaVectorDraw.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def RectangleCommandStart(builder):
    builder.StartObject(3)

def Start(builder):
    RectangleCommandStart(builder)

def RectangleCommandAddUpperLeft(builder, upperLeft):
    builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(upperLeft), 0)

def AddUpperLeft(builder, upperLeft):
    RectangleCommandAddUpperLeft(builder, upperLeft)

def RectangleCommandAddLowerRight(builder, lowerRight):
    builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(lowerRight), 0)

def AddLowerRight(builder, lowerRight):
    RectangleCommandAddLowerRight(builder, lowerRight)

def RectangleCommandAddCornerRadius(builder, cornerRadius):
    builder.PrependStructSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(cornerRadius), 0)

def AddCornerRadius(builder, cornerRadius):
    RectangleCommandAddCornerRadius(builder, cornerRadius)

def RectangleCommandEnd(builder):
    return builder.EndObject()

def End(builder):
    return RectangleCommandEnd(builder)
