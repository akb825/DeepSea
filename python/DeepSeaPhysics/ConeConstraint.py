# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaPhysics

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConeConstraint(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConeConstraint()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConeConstraint(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConeConstraint
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConeConstraint
    def FirstActor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConeConstraint
    def FirstPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaPhysics.Vector3f import Vector3f
            obj = Vector3f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ConeConstraint
    def FirstOrientation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaPhysics.Quaternion4f import Quaternion4f
            obj = Quaternion4f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ConeConstraint
    def SecondActor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConeConstraint
    def SecondPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaPhysics.Vector3f import Vector3f
            obj = Vector3f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ConeConstraint
    def SecondOrientation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaPhysics.Quaternion4f import Quaternion4f
            obj = Quaternion4f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ConeConstraint
    def MaxAngle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def ConeConstraintStart(builder):
    builder.StartObject(7)

def Start(builder):
    ConeConstraintStart(builder)

def ConeConstraintAddFirstActor(builder, firstActor):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(firstActor), 0)

def AddFirstActor(builder, firstActor):
    ConeConstraintAddFirstActor(builder, firstActor)

def ConeConstraintAddFirstPosition(builder, firstPosition):
    builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(firstPosition), 0)

def AddFirstPosition(builder, firstPosition):
    ConeConstraintAddFirstPosition(builder, firstPosition)

def ConeConstraintAddFirstOrientation(builder, firstOrientation):
    builder.PrependStructSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(firstOrientation), 0)

def AddFirstOrientation(builder, firstOrientation):
    ConeConstraintAddFirstOrientation(builder, firstOrientation)

def ConeConstraintAddSecondActor(builder, secondActor):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(secondActor), 0)

def AddSecondActor(builder, secondActor):
    ConeConstraintAddSecondActor(builder, secondActor)

def ConeConstraintAddSecondPosition(builder, secondPosition):
    builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(secondPosition), 0)

def AddSecondPosition(builder, secondPosition):
    ConeConstraintAddSecondPosition(builder, secondPosition)

def ConeConstraintAddSecondOrientation(builder, secondOrientation):
    builder.PrependStructSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(secondOrientation), 0)

def AddSecondOrientation(builder, secondOrientation):
    ConeConstraintAddSecondOrientation(builder, secondOrientation)

def ConeConstraintAddMaxAngle(builder, maxAngle):
    builder.PrependFloat32Slot(6, maxAngle, 0.0)

def AddMaxAngle(builder, maxAngle):
    ConeConstraintAddMaxAngle(builder, maxAngle)

def ConeConstraintEnd(builder):
    return builder.EndObject()

def End(builder):
    return ConeConstraintEnd(builder)
