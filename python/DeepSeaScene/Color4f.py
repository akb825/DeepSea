# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Color4f(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 16

    # Color4f
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Color4f
    def Red(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # Color4f
    def Green(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # Color4f
    def Blue(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # Color4f
    def Alpha(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))

def CreateColor4f(builder, red, green, blue, alpha):
    builder.Prep(4, 16)
    builder.PrependFloat32(alpha)
    builder.PrependFloat32(blue)
    builder.PrependFloat32(green)
    builder.PrependFloat32(red)
    return builder.Offset()
