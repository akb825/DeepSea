# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SubpassDependency(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 28

    # SubpassDependency
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SubpassDependency
    def SrcSubpass(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # SubpassDependency
    def SrcStages(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # SubpassDependency
    def SrcAccess(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # SubpassDependency
    def DstSubpass(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # SubpassDependency
    def DstStages(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # SubpassDependency
    def DstAccess(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(20))
    # SubpassDependency
    def RegionDependency(self): return self._tab.Get(flatbuffers.number_types.BoolFlags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))

def CreateSubpassDependency(builder, srcSubpass, srcStages, srcAccess, dstSubpass, dstStages, dstAccess, regionDependency):
    builder.Prep(4, 28)
    builder.Pad(3)
    builder.PrependBool(regionDependency)
    builder.PrependUint32(dstAccess)
    builder.PrependUint32(dstStages)
    builder.PrependUint32(dstSubpass)
    builder.PrependUint32(srcAccess)
    builder.PrependUint32(srcStages)
    builder.PrependUint32(srcSubpass)
    return builder.Offset()
