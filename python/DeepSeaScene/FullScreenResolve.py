# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FullScreenResolve(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsFullScreenResolve(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FullScreenResolve()
        x.Init(buf, n + offset)
        return x

    # FullScreenResolve
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FullScreenResolve
    def ShaderName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FullScreenResolve
    def MaterialName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FullScreenResolve
    def DynamicRenderStates(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from DeepSeaScene.DynamicRenderStates import DynamicRenderStates
            obj = DynamicRenderStates()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def FullScreenResolveStart(builder): builder.StartObject(3)
def FullScreenResolveAddShaderName(builder, shaderName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(shaderName), 0)
def FullScreenResolveAddMaterialName(builder, materialName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(materialName), 0)
def FullScreenResolveAddDynamicRenderStates(builder, dynamicRenderStates): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(dynamicRenderStates), 0)
def FullScreenResolveEnd(builder): return builder.EndObject()
