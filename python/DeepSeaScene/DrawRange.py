# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DrawRange(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DrawRange()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDrawRange(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DrawRange
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DrawRange
    def VertexCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DrawRange
    def InstanceCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DrawRange
    def FirstVertex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DrawRange
    def FirstInstance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def DrawRangeStart(builder): builder.StartObject(4)
def Start(builder):
    return DrawRangeStart(builder)
def DrawRangeAddVertexCount(builder, vertexCount): builder.PrependUint32Slot(0, vertexCount, 0)
def AddVertexCount(builder, vertexCount):
    return DrawRangeAddVertexCount(builder, vertexCount)
def DrawRangeAddInstanceCount(builder, instanceCount): builder.PrependUint32Slot(1, instanceCount, 0)
def AddInstanceCount(builder, instanceCount):
    return DrawRangeAddInstanceCount(builder, instanceCount)
def DrawRangeAddFirstVertex(builder, firstVertex): builder.PrependUint32Slot(2, firstVertex, 0)
def AddFirstVertex(builder, firstVertex):
    return DrawRangeAddFirstVertex(builder, firstVertex)
def DrawRangeAddFirstInstance(builder, firstInstance): builder.PrependUint32Slot(3, firstInstance, 0)
def AddFirstInstance(builder, firstInstance):
    return DrawRangeAddFirstInstance(builder, firstInstance)
def DrawRangeEnd(builder): return builder.EndObject()
def End(builder):
    return DrawRangeEnd(builder)