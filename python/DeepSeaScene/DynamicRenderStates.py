# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DynamicRenderStates(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DynamicRenderStates()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDynamicRenderStates(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DynamicRenderStates
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DynamicRenderStates
    def LineWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DynamicRenderStates
    def DepthBiasConstantFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DynamicRenderStates
    def DepthBiasClamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DynamicRenderStates
    def DepthBiasSlopeFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DynamicRenderStates
    def BlendConstants(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaScene.Color4f import Color4f
            obj = Color4f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DynamicRenderStates
    def DepthBounds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = o + self._tab.Pos
            from DeepSeaScene.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DynamicRenderStates
    def FrontStencilCompareMask(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DynamicRenderStates
    def BackStencilCompareMask(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DynamicRenderStates
    def FrontStencilWriteMask(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DynamicRenderStates
    def BackStencilWriteMask(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DynamicRenderStates
    def FrontStencilReference(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DynamicRenderStates
    def BackStencilReference(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(12)
def DynamicRenderStatesStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddLineWidth(builder, lineWidth): builder.PrependFloat32Slot(0, lineWidth, 0.0)
def DynamicRenderStatesAddLineWidth(builder, lineWidth):
    """This method is deprecated. Please switch to AddLineWidth."""
    return AddLineWidth(builder, lineWidth)
def AddDepthBiasConstantFactor(builder, depthBiasConstantFactor): builder.PrependFloat32Slot(1, depthBiasConstantFactor, 0.0)
def DynamicRenderStatesAddDepthBiasConstantFactor(builder, depthBiasConstantFactor):
    """This method is deprecated. Please switch to AddDepthBiasConstantFactor."""
    return AddDepthBiasConstantFactor(builder, depthBiasConstantFactor)
def AddDepthBiasClamp(builder, depthBiasClamp): builder.PrependFloat32Slot(2, depthBiasClamp, 0.0)
def DynamicRenderStatesAddDepthBiasClamp(builder, depthBiasClamp):
    """This method is deprecated. Please switch to AddDepthBiasClamp."""
    return AddDepthBiasClamp(builder, depthBiasClamp)
def AddDepthBiasSlopeFactor(builder, depthBiasSlopeFactor): builder.PrependFloat32Slot(3, depthBiasSlopeFactor, 0.0)
def DynamicRenderStatesAddDepthBiasSlopeFactor(builder, depthBiasSlopeFactor):
    """This method is deprecated. Please switch to AddDepthBiasSlopeFactor."""
    return AddDepthBiasSlopeFactor(builder, depthBiasSlopeFactor)
def AddBlendConstants(builder, blendConstants): builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(blendConstants), 0)
def DynamicRenderStatesAddBlendConstants(builder, blendConstants):
    """This method is deprecated. Please switch to AddBlendConstants."""
    return AddBlendConstants(builder, blendConstants)
def AddDepthBounds(builder, depthBounds): builder.PrependStructSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(depthBounds), 0)
def DynamicRenderStatesAddDepthBounds(builder, depthBounds):
    """This method is deprecated. Please switch to AddDepthBounds."""
    return AddDepthBounds(builder, depthBounds)
def AddFrontStencilCompareMask(builder, frontStencilCompareMask): builder.PrependUint32Slot(6, frontStencilCompareMask, 0)
def DynamicRenderStatesAddFrontStencilCompareMask(builder, frontStencilCompareMask):
    """This method is deprecated. Please switch to AddFrontStencilCompareMask."""
    return AddFrontStencilCompareMask(builder, frontStencilCompareMask)
def AddBackStencilCompareMask(builder, backStencilCompareMask): builder.PrependUint32Slot(7, backStencilCompareMask, 0)
def DynamicRenderStatesAddBackStencilCompareMask(builder, backStencilCompareMask):
    """This method is deprecated. Please switch to AddBackStencilCompareMask."""
    return AddBackStencilCompareMask(builder, backStencilCompareMask)
def AddFrontStencilWriteMask(builder, frontStencilWriteMask): builder.PrependUint32Slot(8, frontStencilWriteMask, 0)
def DynamicRenderStatesAddFrontStencilWriteMask(builder, frontStencilWriteMask):
    """This method is deprecated. Please switch to AddFrontStencilWriteMask."""
    return AddFrontStencilWriteMask(builder, frontStencilWriteMask)
def AddBackStencilWriteMask(builder, backStencilWriteMask): builder.PrependUint32Slot(9, backStencilWriteMask, 0)
def DynamicRenderStatesAddBackStencilWriteMask(builder, backStencilWriteMask):
    """This method is deprecated. Please switch to AddBackStencilWriteMask."""
    return AddBackStencilWriteMask(builder, backStencilWriteMask)
def AddFrontStencilReference(builder, frontStencilReference): builder.PrependUint32Slot(10, frontStencilReference, 0)
def DynamicRenderStatesAddFrontStencilReference(builder, frontStencilReference):
    """This method is deprecated. Please switch to AddFrontStencilReference."""
    return AddFrontStencilReference(builder, frontStencilReference)
def AddBackStencilReference(builder, backStencilReference): builder.PrependUint32Slot(11, backStencilReference, 0)
def DynamicRenderStatesAddBackStencilReference(builder, backStencilReference):
    """This method is deprecated. Please switch to AddBackStencilReference."""
    return AddBackStencilReference(builder, backStencilReference)
def End(builder): return builder.EndObject()
def DynamicRenderStatesEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)