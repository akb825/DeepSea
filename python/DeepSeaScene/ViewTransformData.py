# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DeepSeaScene

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ViewTransformData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ViewTransformData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsViewTransformData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ViewTransformData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ViewTransformData
    def VariableGroupDesc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ViewTransformDataStart(builder): builder.StartObject(1)
def Start(builder):
    return ViewTransformDataStart(builder)
def ViewTransformDataAddVariableGroupDesc(builder, variableGroupDesc): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(variableGroupDesc), 0)
def AddVariableGroupDesc(builder, variableGroupDesc):
    return ViewTransformDataAddVariableGroupDesc(builder, variableGroupDesc)
def ViewTransformDataEnd(builder): return builder.EndObject()
def End(builder):
    return ViewTransformDataEnd(builder)