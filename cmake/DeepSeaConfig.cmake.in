if (CMAKE_VERSION VERSION_LESS 3.0.2)
	message(FATAL_ERROR "DeepSea requires at least CMake version 3.0.2")
endif()

@componentCheck@

@singleSharedConfig@

include(${CMAKE_CURRENT_LIST_DIR}/helpers.cmake)

# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_DIR}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if (NOT WIN32)
	get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
endif()
if(_IMPORT_PREFIX STREQUAL "/")
	set(_IMPORT_PREFIX "")
endif()

# Python helper scripts.
set(DEEPSEA_PYTHON_DIR "${_IMPORT_PREFIX}/share/deepsea/python")

# Add the tools directory to find the applications.
if (IS_DIRECTORY ${_IMPORT_PREFIX}/tools)
	set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${_IMPORT_PREFIX}/tools)
endif()

include(CMakeFindDependencyMacro)
set(_DeepSea_NOTFOUND_MESSAGE)
foreach(module ${DeepSea_FIND_COMPONENTS})
	find_dependency(DeepSea${module})
	if (NOT DeepSea${module}_FOUND)
		if (DeepSea_FIND_REQUIRED_${module})
			set(_DeepSea_NOTFOUND_MESSAGE "${_DeepSea_NOTFOUND_MESSAGE}Failed to find DeepSea component \"${module}\" config file\n")
		elseif(NOT DeepSea_FIND_QUIETLY)
			message(WARNING "Failed to find DeepSea component \"${module}\" config file")
		endif()
	endif()
endforeach()

if (_DeepSea_NOTFOUND_MESSAGE)
	set(DeepSea_NOT_FOUND_MESSAGE "${_DeepSea_NOTFOUND_MESSAGE}")
	set(DeepSea_FOUND False)
endif()
