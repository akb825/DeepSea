/*
 * Copyright 2020 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <DeepSea/Render/Shaders/VertexAttributes.mslh>
#include <DeepSea/Render/Shaders/Color.mslh>
#include <DeepSea/Scene/Shaders/ViewTransform.mslh>

[[fragment]] uniform subpassInput(0) inputColor;

[[vertex]] layout(location = DS_POSITION) in vec2 position;

[[fragment]] out vec4 color;

[[vertex]]
void vertexShader()
{
	gl_Position = DS_ADJUST_CLIP(vec4(position, 0.0, 1.0));
	gl_Position.xy = dsRotateScreenPosition(gl_Position.xy);
}

[[fragment]]
void fragmentShader()
{
	vec4 linearColor = subpassLoad(inputColor);
	color.rgb = dsSRGBFromLinear(linearColor.rgb);
	color.a = linearColor.a;
}

pipeline sRGB
{
	vertex = vertexShader;
	fragment = fragmentShader;
	cull_mode = back;
}
