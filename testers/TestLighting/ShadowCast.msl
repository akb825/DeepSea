/*
 * Copyright 2021 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <DeepSea/Render/Shaders/VertexAttributes.mslh>
#include <DeepSea/Scene/Shaders/InstanceTransform.mslh>

[[vertex]] layout(location = DS_POSITION) in vec3 position;
[[fragment]] out vec4 outputColor;

[[vertex]]
void vertexShader()
{
	vec4 position4 = vec4(position, 1.0);
	gl_Position = DS_ADJUST_CLIP(INSTANCE(dsInstanceTransform).worldViewProj*position4);
}

[[fragment]]
void fragmentShader()
{
	outputColor = vec4(0, 0, 0, 1);
}

pipeline ShadowCast
{
	vertex = vertexShader;
	fragment = fragmentShader;
	depth_test_enable = true;
	early_fragment_tests = true;
	depth_bias_enable = true;
	cull_mode = back;
	attachment0_color_write_mask = 0;
}

