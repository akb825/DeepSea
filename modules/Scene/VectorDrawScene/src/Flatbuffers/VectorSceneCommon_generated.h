// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_VECTORSCENECOMMON_DEEPSEAVECTORDRAWSCENE_H_
#define FLATBUFFERS_GENERATED_VECTORSCENECOMMON_DEEPSEAVECTORDRAWSCENE_H_

#include "flatbuffers/flatbuffers.h"

namespace DeepSeaVectorDrawScene {

struct Color;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(1) Color FLATBUFFERS_FINAL_CLASS {
 private:
  uint8_t red_;
  uint8_t green_;
  uint8_t blue_;
  uint8_t alpha_;

 public:
  Color() {
    memset(static_cast<void *>(this), 0, sizeof(Color));
  }
  Color(uint8_t _red, uint8_t _green, uint8_t _blue, uint8_t _alpha)
      : red_(flatbuffers::EndianScalar(_red)),
        green_(flatbuffers::EndianScalar(_green)),
        blue_(flatbuffers::EndianScalar(_blue)),
        alpha_(flatbuffers::EndianScalar(_alpha)) {
  }
  uint8_t red() const {
    return flatbuffers::EndianScalar(red_);
  }
  uint8_t green() const {
    return flatbuffers::EndianScalar(green_);
  }
  uint8_t blue() const {
    return flatbuffers::EndianScalar(blue_);
  }
  uint8_t alpha() const {
    return flatbuffers::EndianScalar(alpha_);
  }
};
FLATBUFFERS_STRUCT_END(Color, 4);

}  // namespace DeepSeaVectorDrawScene

#endif  // FLATBUFFERS_GENERATED_VECTORSCENECOMMON_DEEPSEAVECTORDRAWSCENE_H_
