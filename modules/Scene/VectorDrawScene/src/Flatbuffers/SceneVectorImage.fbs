/*
 * Copyright 2020 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

include "DeepSea/Scene/Flatbuffers/SceneCommon.fbs";

namespace DeepSeaVectorDrawScene;

// Struct wrapping a vector image within a scene.
table VectorImage
{
	// Reference to the vector image file or embedded data.
	image : DeepSeaScene.FileOrData (required);

	// The size of the image.
	size : DeepSeaScene.Vector2f;

	// The name of the vector material set for shared material data.
	sharedMaterials : string;

	// The name of the vector shader to draw with.
	shader : string (required);

	// List of vector resources to get textures and fonts from.
	resources : [string];

	// Whether or not the embedded materials should be treated as sRGB and converted to linear when
	// drawing.
	srgb : bool;
}

root_type VectorImage;
