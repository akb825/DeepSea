/*
 * Copyright 2021 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace DeepSeaSceneLighting;

// Struct describing a deferred light resolve.
table DeferredLightResolve
{
	// Name of the light set to get the lights from.
	lightSet : string (required);

	// Name of the shader to process the ambient light.
	ambientShader : string;

	// Name of the material to use with the ambient shader.
	ambientMaterial : string;

	// Name of the shader to process directional lights.
	directionalShader : string;

	// Name of the material to use with the directional shader.
	directionalMaterial : string;

	// Name of the shader to process point lights.
	pointShader : string;

	// Name of the material to use with the point shader.
	pointMaterial : string;

	// Name of the shader to process spot lights.
	spotShader : string;

	// Name of the material to use with the spot shader.
	spotMaterial : string;

	// Intensity threshold for lights to take effect. Set to 0 to use the default value.
	intensityThreshold : float;
}

root_type DeferredLightResolve;
