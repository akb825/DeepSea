/*
 * Copyright 2021 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace DeepSeaSceneLighting;

// Struct describing info for drawing a non-shadowedlight.
table DeferredLightInfo
{
	// Name of the shader to draw the light.
	shader : string (required);

	// Name of the material to use with the light shader.
	material : string (required);
}

// Struct describing info for drawing a shadowedlight.
table DeferredShadowLightInfo
{
	// Name of the shader to draw the light.
	shader : string (required);

	// Name of the material to use with the light shader.
	material : string (required);

	// Name of the shader variable group containing the shadow transform.
	transformGroup : string (required);

	// Name of the shader variable for the shadow texture.
	shadowTexture : string (required);
}

// Struct describing a deferred light resolve.
table DeferredLightResolve
{
	// Name of the light set to get the lights from.
	lightSet : string (required);

	// Name of the shadow manager when drawing shadowed lights.
	shadowManager : string;

	// Info for drawing the ambient light.
	ambient : DeferredLightInfo;

	// Info for drawing non-shadowed directional lights.
	directional : DeferredLightInfo;

	// Info for drawing non-shadowed point lights.
	point : DeferredLightInfo;

	// Info for drawing non-shadowed spot lights.
	spot : DeferredLightInfo;

	// Info for drawing shadowed directional lights.
	shadowDirectional  : DeferredShadowLightInfo;

	// Info for drawing shadowed point lights.
	shadowPoint : DeferredShadowLightInfo;

	// Info for drawing shadowed spot lights.
	shadowSpot : DeferredShadowLightInfo;

	// Intensity threshold for lights to take effect. Set to 0 to use the default value.
	intensityThreshold : float;
}

root_type DeferredLightResolve;
