/*
 * Copyright 2021-2022 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

/**
 * @file
 * @brief Functions for querying screen-space ambient occlusion that was previously calculated.
 */

/**
 * @brief The maximum number of SSAO samples that can be used.
 */
#define DS_MAX_SSAO_SAMPLES 128

/**
 * @brief Queries the SSAO value with smoothing.
 * @param ssao The SSAO texture. This should have linear filtering.
 * @param texCoord The texture coordinate for the current position.
 */
lowp float dsQuerySSAO(sampler2D ssao, vec2 texCoord)
{
	// Use linear filtering to perform a 4x4 filter with 4 lookups.
	const vec2 offsets[4] =
	{
		vec2(-1.5, 1.5), vec2(-1.5, 1.5),
		vec2(-1.5, -0.5), vec2(-0.5, -0.5)
	};

	vec2 invTextureSize = vec2(1.0)/vec2(textureSize(ssao, 0));
	float occlusion = 0.0;
	for (int i = 0; i < 4; ++i)
		occlusion += textureLod(ssao, offsets[i]*invTextureSize + texCoord, 0).r;
	return occlusion*0.25;
}
