/*
 * Copyright 2023 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#if HAS_BUFFERS
#include <DeepSea/Animation/Shaders/SkinBuffer.mslh>
#else
#include <DeepSea/Animation/Shaders/SkinTexture.mslh>
#endif

/**
 * @file
 * @brief Uniform and function for the default skinning implementation for scenes.
 */

/**
 * @brief Uniform containing the skinning data.
 */
#if HAS_BUFFERS

/**
 * @brief The type for the bone index vector.
 */
#define DS_BONE_INDICES_TYPE uvec4

readonly buffer SkinningData
{
	mat4[] matrices;
} dsSkinningData;
#else
#if HAS_INTEGERS
#define DS_BONE_INDICES_TYPE uvec4
#else
#define DS_BONE_INDICES_TYPE vec4
#endif

uniform SkinningTextureInfo
{
	vec2 instanceOffsetStep;
} dsSkinningTextureInfo;

uniform sampler2D SkinningData;
#endif

/**
 * @brief Computes the skin transform.
 * @param bones The bone indices.
 * @param weights The transform weights.
 * @return The skin transform.
 */
[[vertex]]
mat4 dsComputeSkinTransform(DS_BONE_INDICES_TYPE bones, vec4 weights)
{
#if HAS_BUFFERS
	return dsComputeSkinTransformBuffer(bones, weights, dsSkinningData.matrices);
#else
	return dsComputeSkinTransformTexture(bones, weights, SkinningData);
#endif
}
