/*
 * Copyright 2023 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

include "AnimationCommon.fbs";

namespace DeepSeaAnimation;

// Struct describing a node for an animation tree.
table AnimationTreeNode
{
	// The name of the node.
	name : string (required);

	// The scale of the node.
	scale : Vector3f;

	// The rotation of the node.
	rotation : Quaternion4f;

	// The translation of the node.
	translation : Vector3f;

	// The children of the current node.
	children : [AnimationTreeNode];
}

// Struct describing a joint node for an animation tree.
table AnimationJointTreeNode
{
	// The name of the node.
	name : string (required);

	// The scale of the node.
	scale : Vector3f;

	// The rotation of the node.
	rotation : Quaternion4f;

	// The translation of the node.
	translation : Vector3f;

	// The transformation from the joint to local model space.
	toLocalSpace : Matrix44f (required);

	// The indices for the children of the current node.
	children : [uint];
}

// Struct describing an animation tree, containing either standard or joint nodes.
table AnimationTree
{
	// The root nodes for the tree. If this is set, rootJointNodes must be unset.
	rootNodes : [AnimationTreeNode];

	// The joint nodes for the tree. If this is set, rootNodes must be unset.
	jointNodes : [AnimationJointTreeNode];
}

root_type AnimationTree;
