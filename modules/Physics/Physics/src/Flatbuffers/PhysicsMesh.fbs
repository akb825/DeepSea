/*
 * Copyright 2024 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

include "PhysicsCommon.fbs";

namespace DeepSeaPhysics;

// Struct defining a mesh used as a physics shape.
table Mesh
{
	// The vertices for the mesh with 3 floats per vertex.
	vertices : [float] (required);

	// The indices for the mesh triangles as 16-bit values.
	indices16 : [ushort];

	// The indices for the mesh triangles as 32-bit values.
	indices32 : [uint];

	// The number of triangles.
	triangleCount : uint;

	// The per-triangle materials for the mesh.
	triangleMaterials : [ShapePartMaterial];

	// The indices for the mesh materials as 16-bit values.
	materialIndices16 : [ushort];

	// The indices for the mesh materials as 32-bit values.
	materialIndices32 : [uint];

	// Unique name of the mesh to cache the cooked result.
	cacheName : string;
}
