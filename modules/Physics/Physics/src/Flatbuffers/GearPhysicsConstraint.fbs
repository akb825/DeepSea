/*
 * Copyright 2024 Aaron Barany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

include "DeepSea/Physics/Flatbuffers/PhysicsCommon.fbs";

namespace DeepSeaPhysics;

// Struct describing a gear physics constraint, ensuring the rotation of two actors are locked based
// on the gear ratio.
table GearConstraint
{
	// The name of the first actor used in the constraint.
	firstActor : string;

	// The axis of rotation for the first actor.
	firstAxis : Vector3f (required);

	// The revolute constraint for the first actor.. This is optional to improve accuracy.
	firstConstraint : string;

	// The name of the second actor used in the constraint.
	secondActor : string;

	// The axis of rotation for the second actor.
	secondAxis : Vector3f (required);

	// The revolute constraint for the second actor. This is optional to improve accuracy.
	secondConstraint : string;

	// The gear ratio. The ratio is defined as firstActorToothCount/secondActorToothCount. The ratio
	// may be negative if the axes are flipped.
	ratio : float;
}
