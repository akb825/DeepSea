#pragma once
#ifndef __AnyGL_wgl_h_
#define __AnyGL_wgl_h_ 1

#include "AnyGLConfig.h"
#include "gl.h"

#if ANYGL_HAS_WGL
#define WIN32_LEAN_AND_MEAN
#ifndef _WINDOWS_
#undef APIENTRY
#endif
#include <Windows.h>

/* Generated by AnyGL. */

#ifdef __cplusplus
extern "C" {
#endif



#ifndef WGL_ARB_buffer_region
#define WGL_ARB_buffer_region 1
#define ANYWGL_ARB_buffer_region 1


#endif /* WGL_ARB_buffer_region */
#ifndef ANYGL_NO_DEFINES
#define WGL_FRONT_COLOR_BUFFER_BIT_ARB    0x00000001
#define WGL_BACK_COLOR_BUFFER_BIT_ARB     0x00000002
#define WGL_DEPTH_BUFFER_BIT_ARB          0x00000004
#define WGL_STENCIL_BUFFER_BIT_ARB        0x00000008
#endif /* ANYGL_NO_DEFINES */

typedef HANDLE (APIENTRY* PFNANYWGLCREATEBUFFERREGIONARBPROC)(HDC hDC, int iLayerPlane, UINT uType);
typedef VOID (APIENTRY* PFNANYWGLDELETEBUFFERREGIONARBPROC)(HANDLE hRegion);
typedef BOOL (APIENTRY* PFNANYWGLSAVEBUFFERREGIONARBPROC)(HANDLE hRegion, int x, int y, int width, int height);
typedef BOOL (APIENTRY* PFNANYWGLRESTOREBUFFERREGIONARBPROC)(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);

ANYGL_EXPORT extern PFNANYWGLCREATEBUFFERREGIONARBPROC AnyGL_wglCreateBufferRegionARB;
ANYGL_EXPORT extern PFNANYWGLDELETEBUFFERREGIONARBPROC AnyGL_wglDeleteBufferRegionARB;
ANYGL_EXPORT extern PFNANYWGLSAVEBUFFERREGIONARBPROC AnyGL_wglSaveBufferRegionARB;
ANYGL_EXPORT extern PFNANYWGLRESTOREBUFFERREGIONARBPROC AnyGL_wglRestoreBufferRegionARB;

#ifndef ANYGL_NO_DEFINES
#define wglCreateBufferRegionARB(hDC, iLayerPlane, uType) AnyGL_wglCreateBufferRegionARB(hDC, iLayerPlane, uType)
#define wglDeleteBufferRegionARB(hRegion) AnyGL_wglDeleteBufferRegionARB(hRegion)
#define wglSaveBufferRegionARB(hRegion, x, y, width, height) AnyGL_wglSaveBufferRegionARB(hRegion, x, y, width, height)
#define wglRestoreBufferRegionARB(hRegion, x, y, width, height, xSrc, ySrc) AnyGL_wglRestoreBufferRegionARB(hRegion, x, y, width, height, xSrc, ySrc)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_context_flush_control
#define WGL_ARB_context_flush_control 1
#define ANYWGL_ARB_context_flush_control 1


#endif /* WGL_ARB_context_flush_control */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB  0x2097
#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB 0
#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB 0x2098
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_create_context
#define WGL_ARB_create_context 1
#define ANYWGL_ARB_create_context 1


#endif /* WGL_ARB_create_context */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_DEBUG_BIT_ARB         0x00000001
#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x00000002
#define WGL_CONTEXT_MAJOR_VERSION_ARB     0x2091
#define WGL_CONTEXT_MINOR_VERSION_ARB     0x2092
#define WGL_CONTEXT_LAYER_PLANE_ARB       0x2093
#define WGL_CONTEXT_FLAGS_ARB             0x2094
#define ERROR_INVALID_VERSION_ARB         0x2095
#endif /* ANYGL_NO_DEFINES */

typedef HGLRC (APIENTRY* PFNANYWGLCREATECONTEXTATTRIBSARBPROC)(HDC hDC, HGLRC hShareContext, const int *attribList);

ANYGL_EXPORT extern PFNANYWGLCREATECONTEXTATTRIBSARBPROC AnyGL_wglCreateContextAttribsARB;

#ifndef ANYGL_NO_DEFINES
#define wglCreateContextAttribsARB(hDC, hShareContext, attribList) AnyGL_wglCreateContextAttribsARB(hDC, hShareContext, attribList)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_create_context_no_error
#define WGL_ARB_create_context_no_error 1
#define ANYWGL_ARB_create_context_no_error 1


#endif /* WGL_ARB_create_context_no_error */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB   0x31B3
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_create_context_profile
#define WGL_ARB_create_context_profile 1
#define ANYWGL_ARB_create_context_profile 1


#endif /* WGL_ARB_create_context_profile */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_PROFILE_MASK_ARB      0x9126
#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB  0x00000001
#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB 0x00000002
#define ERROR_INVALID_PROFILE_ARB         0x2096
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_create_context_robustness
#define WGL_ARB_create_context_robustness 1
#define ANYWGL_ARB_create_context_robustness 1


#endif /* WGL_ARB_create_context_robustness */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB 0x00000004
#define WGL_LOSE_CONTEXT_ON_RESET_ARB     0x8252
#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define WGL_NO_RESET_NOTIFICATION_ARB     0x8261
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_extensions_string
#define WGL_ARB_extensions_string 1
#define ANYWGL_ARB_extensions_string 1


#endif /* WGL_ARB_extensions_string */
typedef const char *(APIENTRY* PFNANYWGLGETEXTENSIONSSTRINGARBPROC)(HDC hdc);

ANYGL_EXPORT extern PFNANYWGLGETEXTENSIONSSTRINGARBPROC AnyGL_wglGetExtensionsStringARB;

#ifndef ANYGL_NO_DEFINES
#define wglGetExtensionsStringARB(hdc) AnyGL_wglGetExtensionsStringARB(hdc)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_framebuffer_sRGB
#define WGL_ARB_framebuffer_sRGB 1
#define ANYWGL_ARB_framebuffer_sRGB 1


#endif /* WGL_ARB_framebuffer_sRGB */
#ifndef ANYGL_NO_DEFINES
#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB  0x20A9
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_make_current_read
#define WGL_ARB_make_current_read 1
#define ANYWGL_ARB_make_current_read 1


#endif /* WGL_ARB_make_current_read */
#ifndef ANYGL_NO_DEFINES
#define ERROR_INVALID_PIXEL_TYPE_ARB      0x2043
#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB 0x2054
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLMAKECONTEXTCURRENTARBPROC)(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
typedef HDC (APIENTRY* PFNANYWGLGETCURRENTREADDCARBPROC)();

ANYGL_EXPORT extern PFNANYWGLMAKECONTEXTCURRENTARBPROC AnyGL_wglMakeContextCurrentARB;
ANYGL_EXPORT extern PFNANYWGLGETCURRENTREADDCARBPROC AnyGL_wglGetCurrentReadDCARB;

#ifndef ANYGL_NO_DEFINES
#define wglMakeContextCurrentARB(hDrawDC, hReadDC, hglrc) AnyGL_wglMakeContextCurrentARB(hDrawDC, hReadDC, hglrc)
#define wglGetCurrentReadDCARB() AnyGL_wglGetCurrentReadDCARB()
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_multisample
#define WGL_ARB_multisample 1
#define ANYWGL_ARB_multisample 1


#endif /* WGL_ARB_multisample */
#ifndef ANYGL_NO_DEFINES
#define WGL_SAMPLE_BUFFERS_ARB            0x2041
#define WGL_SAMPLES_ARB                   0x2042
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_pbuffer
#define WGL_ARB_pbuffer 1
#define ANYWGL_ARB_pbuffer 1

DECLARE_HANDLE(HPBUFFERARB);

#endif /* WGL_ARB_pbuffer */
#ifndef ANYGL_NO_DEFINES
#define WGL_DRAW_TO_PBUFFER_ARB           0x202D
#define WGL_MAX_PBUFFER_PIXELS_ARB        0x202E
#define WGL_MAX_PBUFFER_WIDTH_ARB         0x202F
#define WGL_MAX_PBUFFER_HEIGHT_ARB        0x2030
#define WGL_PBUFFER_LARGEST_ARB           0x2033
#define WGL_PBUFFER_WIDTH_ARB             0x2034
#define WGL_PBUFFER_HEIGHT_ARB            0x2035
#define WGL_PBUFFER_LOST_ARB              0x2036
#endif /* ANYGL_NO_DEFINES */

typedef HPBUFFERARB (APIENTRY* PFNANYWGLCREATEPBUFFERARBPROC)(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
typedef HDC (APIENTRY* PFNANYWGLGETPBUFFERDCARBPROC)(HPBUFFERARB hPbuffer);
typedef int (APIENTRY* PFNANYWGLRELEASEPBUFFERDCARBPROC)(HPBUFFERARB hPbuffer, HDC hDC);
typedef BOOL (APIENTRY* PFNANYWGLDESTROYPBUFFERARBPROC)(HPBUFFERARB hPbuffer);
typedef BOOL (APIENTRY* PFNANYWGLQUERYPBUFFERARBPROC)(HPBUFFERARB hPbuffer, int iAttribute, int *piValue);

ANYGL_EXPORT extern PFNANYWGLCREATEPBUFFERARBPROC AnyGL_wglCreatePbufferARB;
ANYGL_EXPORT extern PFNANYWGLGETPBUFFERDCARBPROC AnyGL_wglGetPbufferDCARB;
ANYGL_EXPORT extern PFNANYWGLRELEASEPBUFFERDCARBPROC AnyGL_wglReleasePbufferDCARB;
ANYGL_EXPORT extern PFNANYWGLDESTROYPBUFFERARBPROC AnyGL_wglDestroyPbufferARB;
ANYGL_EXPORT extern PFNANYWGLQUERYPBUFFERARBPROC AnyGL_wglQueryPbufferARB;

#ifndef ANYGL_NO_DEFINES
#define wglCreatePbufferARB(hDC, iPixelFormat, iWidth, iHeight, piAttribList) AnyGL_wglCreatePbufferARB(hDC, iPixelFormat, iWidth, iHeight, piAttribList)
#define wglGetPbufferDCARB(hPbuffer) AnyGL_wglGetPbufferDCARB(hPbuffer)
#define wglReleasePbufferDCARB(hPbuffer, hDC) AnyGL_wglReleasePbufferDCARB(hPbuffer, hDC)
#define wglDestroyPbufferARB(hPbuffer) AnyGL_wglDestroyPbufferARB(hPbuffer)
#define wglQueryPbufferARB(hPbuffer, iAttribute, piValue) AnyGL_wglQueryPbufferARB(hPbuffer, iAttribute, piValue)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_pixel_format
#define WGL_ARB_pixel_format 1
#define ANYWGL_ARB_pixel_format 1


#endif /* WGL_ARB_pixel_format */
#ifndef ANYGL_NO_DEFINES
#define WGL_NUMBER_PIXEL_FORMATS_ARB      0x2000
#define WGL_DRAW_TO_WINDOW_ARB            0x2001
#define WGL_DRAW_TO_BITMAP_ARB            0x2002
#define WGL_ACCELERATION_ARB              0x2003
#define WGL_NEED_PALETTE_ARB              0x2004
#define WGL_NEED_SYSTEM_PALETTE_ARB       0x2005
#define WGL_SWAP_LAYER_BUFFERS_ARB        0x2006
#define WGL_SWAP_METHOD_ARB               0x2007
#define WGL_NUMBER_OVERLAYS_ARB           0x2008
#define WGL_NUMBER_UNDERLAYS_ARB          0x2009
#define WGL_TRANSPARENT_ARB               0x200A
#define WGL_TRANSPARENT_RED_VALUE_ARB     0x2037
#define WGL_TRANSPARENT_GREEN_VALUE_ARB   0x2038
#define WGL_TRANSPARENT_BLUE_VALUE_ARB    0x2039
#define WGL_TRANSPARENT_ALPHA_VALUE_ARB   0x203A
#define WGL_TRANSPARENT_INDEX_VALUE_ARB   0x203B
#define WGL_SHARE_DEPTH_ARB               0x200C
#define WGL_SHARE_STENCIL_ARB             0x200D
#define WGL_SHARE_ACCUM_ARB               0x200E
#define WGL_SUPPORT_GDI_ARB               0x200F
#define WGL_SUPPORT_OPENGL_ARB            0x2010
#define WGL_DOUBLE_BUFFER_ARB             0x2011
#define WGL_STEREO_ARB                    0x2012
#define WGL_PIXEL_TYPE_ARB                0x2013
#define WGL_COLOR_BITS_ARB                0x2014
#define WGL_RED_BITS_ARB                  0x2015
#define WGL_RED_SHIFT_ARB                 0x2016
#define WGL_GREEN_BITS_ARB                0x2017
#define WGL_GREEN_SHIFT_ARB               0x2018
#define WGL_BLUE_BITS_ARB                 0x2019
#define WGL_BLUE_SHIFT_ARB                0x201A
#define WGL_ALPHA_BITS_ARB                0x201B
#define WGL_ALPHA_SHIFT_ARB               0x201C
#define WGL_ACCUM_BITS_ARB                0x201D
#define WGL_ACCUM_RED_BITS_ARB            0x201E
#define WGL_ACCUM_GREEN_BITS_ARB          0x201F
#define WGL_ACCUM_BLUE_BITS_ARB           0x2020
#define WGL_ACCUM_ALPHA_BITS_ARB          0x2021
#define WGL_DEPTH_BITS_ARB                0x2022
#define WGL_STENCIL_BITS_ARB              0x2023
#define WGL_AUX_BUFFERS_ARB               0x2024
#define WGL_NO_ACCELERATION_ARB           0x2025
#define WGL_GENERIC_ACCELERATION_ARB      0x2026
#define WGL_FULL_ACCELERATION_ARB         0x2027
#define WGL_SWAP_EXCHANGE_ARB             0x2028
#define WGL_SWAP_COPY_ARB                 0x2029
#define WGL_SWAP_UNDEFINED_ARB            0x202A
#define WGL_TYPE_RGBA_ARB                 0x202B
#define WGL_TYPE_COLORINDEX_ARB           0x202C
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLGETPIXELFORMATATTRIBIVARBPROC)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
typedef BOOL (APIENTRY* PFNANYWGLGETPIXELFORMATATTRIBFVARBPROC)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);
typedef BOOL (APIENTRY* PFNANYWGLCHOOSEPIXELFORMATARBPROC)(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);

ANYGL_EXPORT extern PFNANYWGLGETPIXELFORMATATTRIBIVARBPROC AnyGL_wglGetPixelFormatAttribivARB;
ANYGL_EXPORT extern PFNANYWGLGETPIXELFORMATATTRIBFVARBPROC AnyGL_wglGetPixelFormatAttribfvARB;
ANYGL_EXPORT extern PFNANYWGLCHOOSEPIXELFORMATARBPROC AnyGL_wglChoosePixelFormatARB;

#ifndef ANYGL_NO_DEFINES
#define wglGetPixelFormatAttribivARB(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues) AnyGL_wglGetPixelFormatAttribivARB(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues)
#define wglGetPixelFormatAttribfvARB(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues) AnyGL_wglGetPixelFormatAttribfvARB(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues)
#define wglChoosePixelFormatARB(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats) AnyGL_wglChoosePixelFormatARB(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_pixel_format_float
#define WGL_ARB_pixel_format_float 1
#define ANYWGL_ARB_pixel_format_float 1


#endif /* WGL_ARB_pixel_format_float */
#ifndef ANYGL_NO_DEFINES
#define WGL_TYPE_RGBA_FLOAT_ARB           0x21A0
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_render_texture
#define WGL_ARB_render_texture 1
#define ANYWGL_ARB_render_texture 1


#endif /* WGL_ARB_render_texture */
#ifndef ANYGL_NO_DEFINES
#define WGL_BIND_TO_TEXTURE_RGB_ARB       0x2070
#define WGL_BIND_TO_TEXTURE_RGBA_ARB      0x2071
#define WGL_TEXTURE_FORMAT_ARB            0x2072
#define WGL_TEXTURE_TARGET_ARB            0x2073
#define WGL_MIPMAP_TEXTURE_ARB            0x2074
#define WGL_TEXTURE_RGB_ARB               0x2075
#define WGL_TEXTURE_RGBA_ARB              0x2076
#define WGL_NO_TEXTURE_ARB                0x2077
#define WGL_TEXTURE_CUBE_MAP_ARB          0x2078
#define WGL_TEXTURE_1D_ARB                0x2079
#define WGL_TEXTURE_2D_ARB                0x207A
#define WGL_MIPMAP_LEVEL_ARB              0x207B
#define WGL_CUBE_MAP_FACE_ARB             0x207C
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#define WGL_FRONT_LEFT_ARB                0x2083
#define WGL_FRONT_RIGHT_ARB               0x2084
#define WGL_BACK_LEFT_ARB                 0x2085
#define WGL_BACK_RIGHT_ARB                0x2086
#define WGL_AUX0_ARB                      0x2087
#define WGL_AUX1_ARB                      0x2088
#define WGL_AUX2_ARB                      0x2089
#define WGL_AUX3_ARB                      0x208A
#define WGL_AUX4_ARB                      0x208B
#define WGL_AUX5_ARB                      0x208C
#define WGL_AUX6_ARB                      0x208D
#define WGL_AUX7_ARB                      0x208E
#define WGL_AUX8_ARB                      0x208F
#define WGL_AUX9_ARB                      0x2090
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLBINDTEXIMAGEARBPROC)(HPBUFFERARB hPbuffer, int iBuffer);
typedef BOOL (APIENTRY* PFNANYWGLRELEASETEXIMAGEARBPROC)(HPBUFFERARB hPbuffer, int iBuffer);
typedef BOOL (APIENTRY* PFNANYWGLSETPBUFFERATTRIBARBPROC)(HPBUFFERARB hPbuffer, const int *piAttribList);

ANYGL_EXPORT extern PFNANYWGLBINDTEXIMAGEARBPROC AnyGL_wglBindTexImageARB;
ANYGL_EXPORT extern PFNANYWGLRELEASETEXIMAGEARBPROC AnyGL_wglReleaseTexImageARB;
ANYGL_EXPORT extern PFNANYWGLSETPBUFFERATTRIBARBPROC AnyGL_wglSetPbufferAttribARB;

#ifndef ANYGL_NO_DEFINES
#define wglBindTexImageARB(hPbuffer, iBuffer) AnyGL_wglBindTexImageARB(hPbuffer, iBuffer)
#define wglReleaseTexImageARB(hPbuffer, iBuffer) AnyGL_wglReleaseTexImageARB(hPbuffer, iBuffer)
#define wglSetPbufferAttribARB(hPbuffer, piAttribList) AnyGL_wglSetPbufferAttribARB(hPbuffer, piAttribList)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_robustness_application_isolation
#define WGL_ARB_robustness_application_isolation 1
#define ANYWGL_ARB_robustness_application_isolation 1


#endif /* WGL_ARB_robustness_application_isolation */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_RESET_ISOLATION_BIT_ARB 0x00000008
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ARB_robustness_share_group_isolation
#define WGL_ARB_robustness_share_group_isolation 1
#define ANYWGL_ARB_robustness_share_group_isolation 1


#endif /* WGL_ARB_robustness_share_group_isolation */

#ifndef WGL_3DFX_multisample
#define WGL_3DFX_multisample 1
#define ANYWGL_3DFX_multisample 1


#endif /* WGL_3DFX_multisample */
#ifndef ANYGL_NO_DEFINES
#define WGL_SAMPLE_BUFFERS_3DFX           0x2060
#define WGL_SAMPLES_3DFX                  0x2061
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_3DL_stereo_control
#define WGL_3DL_stereo_control 1
#define ANYWGL_3DL_stereo_control 1


#endif /* WGL_3DL_stereo_control */
#ifndef ANYGL_NO_DEFINES
#define WGL_STEREO_EMITTER_ENABLE_3DL     0x2055
#define WGL_STEREO_EMITTER_DISABLE_3DL    0x2056
#define WGL_STEREO_POLARITY_NORMAL_3DL    0x2057
#define WGL_STEREO_POLARITY_INVERT_3DL    0x2058
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLSETSTEREOEMITTERSTATE3DLPROC)(HDC hDC, UINT uState);

ANYGL_EXPORT extern PFNANYWGLSETSTEREOEMITTERSTATE3DLPROC AnyGL_wglSetStereoEmitterState3DL;

#ifndef ANYGL_NO_DEFINES
#define wglSetStereoEmitterState3DL(hDC, uState) AnyGL_wglSetStereoEmitterState3DL(hDC, uState)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_AMD_gpu_association
#define WGL_AMD_gpu_association 1
#define ANYWGL_AMD_gpu_association 1


#endif /* WGL_AMD_gpu_association */
#ifndef ANYGL_NO_DEFINES
#define WGL_GPU_VENDOR_AMD                0x1F00
#define WGL_GPU_RENDERER_STRING_AMD       0x1F01
#define WGL_GPU_OPENGL_VERSION_STRING_AMD 0x1F02
#define WGL_GPU_FASTEST_TARGET_GPUS_AMD   0x21A2
#define WGL_GPU_RAM_AMD                   0x21A3
#define WGL_GPU_CLOCK_AMD                 0x21A4
#define WGL_GPU_NUM_PIPES_AMD             0x21A5
#define WGL_GPU_NUM_SIMD_AMD              0x21A6
#define WGL_GPU_NUM_RB_AMD                0x21A7
#define WGL_GPU_NUM_SPI_AMD               0x21A8
#endif /* ANYGL_NO_DEFINES */

typedef UINT (APIENTRY* PFNANYWGLGETGPUIDSAMDPROC)(UINT maxCount, UINT *ids);
typedef INT (APIENTRY* PFNANYWGLGETGPUINFOAMDPROC)(UINT id, INT property, GLenum dataType, UINT size, void *data);
typedef UINT (APIENTRY* PFNANYWGLGETCONTEXTGPUIDAMDPROC)(HGLRC hglrc);
typedef HGLRC (APIENTRY* PFNANYWGLCREATEASSOCIATEDCONTEXTAMDPROC)(UINT id);
typedef HGLRC (APIENTRY* PFNANYWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC)(UINT id, HGLRC hShareContext, const int *attribList);
typedef BOOL (APIENTRY* PFNANYWGLDELETEASSOCIATEDCONTEXTAMDPROC)(HGLRC hglrc);
typedef BOOL (APIENTRY* PFNANYWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC)(HGLRC hglrc);
typedef HGLRC (APIENTRY* PFNANYWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC)();
typedef VOID (APIENTRY* PFNANYWGLBLITCONTEXTFRAMEBUFFERAMDPROC)(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

ANYGL_EXPORT extern PFNANYWGLGETGPUIDSAMDPROC AnyGL_wglGetGPUIDsAMD;
ANYGL_EXPORT extern PFNANYWGLGETGPUINFOAMDPROC AnyGL_wglGetGPUInfoAMD;
ANYGL_EXPORT extern PFNANYWGLGETCONTEXTGPUIDAMDPROC AnyGL_wglGetContextGPUIDAMD;
ANYGL_EXPORT extern PFNANYWGLCREATEASSOCIATEDCONTEXTAMDPROC AnyGL_wglCreateAssociatedContextAMD;
ANYGL_EXPORT extern PFNANYWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC AnyGL_wglCreateAssociatedContextAttribsAMD;
ANYGL_EXPORT extern PFNANYWGLDELETEASSOCIATEDCONTEXTAMDPROC AnyGL_wglDeleteAssociatedContextAMD;
ANYGL_EXPORT extern PFNANYWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC AnyGL_wglMakeAssociatedContextCurrentAMD;
ANYGL_EXPORT extern PFNANYWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC AnyGL_wglGetCurrentAssociatedContextAMD;
ANYGL_EXPORT extern PFNANYWGLBLITCONTEXTFRAMEBUFFERAMDPROC AnyGL_wglBlitContextFramebufferAMD;

#ifndef ANYGL_NO_DEFINES
#define wglGetGPUIDsAMD(maxCount, ids) AnyGL_wglGetGPUIDsAMD(maxCount, ids)
#define wglGetGPUInfoAMD(id, property, dataType, size, data) AnyGL_wglGetGPUInfoAMD(id, property, dataType, size, data)
#define wglGetContextGPUIDAMD(hglrc) AnyGL_wglGetContextGPUIDAMD(hglrc)
#define wglCreateAssociatedContextAMD(id) AnyGL_wglCreateAssociatedContextAMD(id)
#define wglCreateAssociatedContextAttribsAMD(id, hShareContext, attribList) AnyGL_wglCreateAssociatedContextAttribsAMD(id, hShareContext, attribList)
#define wglDeleteAssociatedContextAMD(hglrc) AnyGL_wglDeleteAssociatedContextAMD(hglrc)
#define wglMakeAssociatedContextCurrentAMD(hglrc) AnyGL_wglMakeAssociatedContextCurrentAMD(hglrc)
#define wglGetCurrentAssociatedContextAMD() AnyGL_wglGetCurrentAssociatedContextAMD()
#define wglBlitContextFramebufferAMD(dstCtx, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) AnyGL_wglBlitContextFramebufferAMD(dstCtx, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ATI_pixel_format_float
#define WGL_ATI_pixel_format_float 1
#define ANYWGL_ATI_pixel_format_float 1


#endif /* WGL_ATI_pixel_format_float */
#ifndef ANYGL_NO_DEFINES
#define WGL_TYPE_RGBA_FLOAT_ATI           0x21A0
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_ATI_render_texture_rectangle
#define WGL_ATI_render_texture_rectangle 1
#define ANYWGL_ATI_render_texture_rectangle 1


#endif /* WGL_ATI_render_texture_rectangle */
#ifndef ANYGL_NO_DEFINES
#define WGL_TEXTURE_RECTANGLE_ATI         0x21A5
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_colorspace
#define WGL_EXT_colorspace 1
#define ANYWGL_EXT_colorspace 1


#endif /* WGL_EXT_colorspace */
#ifndef ANYGL_NO_DEFINES
#define WGL_COLORSPACE_EXT                0x309D
#define WGL_COLORSPACE_SRGB_EXT           0x3089
#define WGL_COLORSPACE_LINEAR_EXT         0x308A
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_create_context_es2_profile
#define WGL_EXT_create_context_es2_profile 1
#define ANYWGL_EXT_create_context_es2_profile 1


#endif /* WGL_EXT_create_context_es2_profile */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT   0x00000004
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_create_context_es_profile
#define WGL_EXT_create_context_es_profile 1
#define ANYWGL_EXT_create_context_es_profile 1


#endif /* WGL_EXT_create_context_es_profile */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_ES_PROFILE_BIT_EXT    0x00000004
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_depth_float
#define WGL_EXT_depth_float 1
#define ANYWGL_EXT_depth_float 1


#endif /* WGL_EXT_depth_float */
#ifndef ANYGL_NO_DEFINES
#define WGL_DEPTH_FLOAT_EXT               0x2040
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_display_color_table
#define WGL_EXT_display_color_table 1
#define ANYWGL_EXT_display_color_table 1


#endif /* WGL_EXT_display_color_table */
typedef GLboolean (APIENTRY* PFNANYWGLCREATEDISPLAYCOLORTABLEEXTPROC)(GLushort id);
typedef GLboolean (APIENTRY* PFNANYWGLLOADDISPLAYCOLORTABLEEXTPROC)(const GLushort *table, GLuint length);
typedef GLboolean (APIENTRY* PFNANYWGLBINDDISPLAYCOLORTABLEEXTPROC)(GLushort id);
typedef VOID (APIENTRY* PFNANYWGLDESTROYDISPLAYCOLORTABLEEXTPROC)(GLushort id);

ANYGL_EXPORT extern PFNANYWGLCREATEDISPLAYCOLORTABLEEXTPROC AnyGL_wglCreateDisplayColorTableEXT;
ANYGL_EXPORT extern PFNANYWGLLOADDISPLAYCOLORTABLEEXTPROC AnyGL_wglLoadDisplayColorTableEXT;
ANYGL_EXPORT extern PFNANYWGLBINDDISPLAYCOLORTABLEEXTPROC AnyGL_wglBindDisplayColorTableEXT;
ANYGL_EXPORT extern PFNANYWGLDESTROYDISPLAYCOLORTABLEEXTPROC AnyGL_wglDestroyDisplayColorTableEXT;

#ifndef ANYGL_NO_DEFINES
#define wglCreateDisplayColorTableEXT(id) AnyGL_wglCreateDisplayColorTableEXT(id)
#define wglLoadDisplayColorTableEXT(table, length) AnyGL_wglLoadDisplayColorTableEXT(table, length)
#define wglBindDisplayColorTableEXT(id) AnyGL_wglBindDisplayColorTableEXT(id)
#define wglDestroyDisplayColorTableEXT(id) AnyGL_wglDestroyDisplayColorTableEXT(id)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_extensions_string
#define WGL_EXT_extensions_string 1
#define ANYWGL_EXT_extensions_string 1


#endif /* WGL_EXT_extensions_string */
typedef const char *(APIENTRY* PFNANYWGLGETEXTENSIONSSTRINGEXTPROC)();

ANYGL_EXPORT extern PFNANYWGLGETEXTENSIONSSTRINGEXTPROC AnyGL_wglGetExtensionsStringEXT;

#ifndef ANYGL_NO_DEFINES
#define wglGetExtensionsStringEXT() AnyGL_wglGetExtensionsStringEXT()
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_framebuffer_sRGB
#define WGL_EXT_framebuffer_sRGB 1
#define ANYWGL_EXT_framebuffer_sRGB 1


#endif /* WGL_EXT_framebuffer_sRGB */
#ifndef ANYGL_NO_DEFINES
#define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT  0x20A9
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_make_current_read
#define WGL_EXT_make_current_read 1
#define ANYWGL_EXT_make_current_read 1


#endif /* WGL_EXT_make_current_read */
#ifndef ANYGL_NO_DEFINES
#define ERROR_INVALID_PIXEL_TYPE_EXT      0x2043
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLMAKECONTEXTCURRENTEXTPROC)(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
typedef HDC (APIENTRY* PFNANYWGLGETCURRENTREADDCEXTPROC)();

ANYGL_EXPORT extern PFNANYWGLMAKECONTEXTCURRENTEXTPROC AnyGL_wglMakeContextCurrentEXT;
ANYGL_EXPORT extern PFNANYWGLGETCURRENTREADDCEXTPROC AnyGL_wglGetCurrentReadDCEXT;

#ifndef ANYGL_NO_DEFINES
#define wglMakeContextCurrentEXT(hDrawDC, hReadDC, hglrc) AnyGL_wglMakeContextCurrentEXT(hDrawDC, hReadDC, hglrc)
#define wglGetCurrentReadDCEXT() AnyGL_wglGetCurrentReadDCEXT()
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_multisample
#define WGL_EXT_multisample 1
#define ANYWGL_EXT_multisample 1


#endif /* WGL_EXT_multisample */
#ifndef ANYGL_NO_DEFINES
#define WGL_SAMPLE_BUFFERS_EXT            0x2041
#define WGL_SAMPLES_EXT                   0x2042
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_pbuffer
#define WGL_EXT_pbuffer 1
#define ANYWGL_EXT_pbuffer 1

DECLARE_HANDLE(HPBUFFEREXT);

#endif /* WGL_EXT_pbuffer */
#ifndef ANYGL_NO_DEFINES
#define WGL_DRAW_TO_PBUFFER_EXT           0x202D
#define WGL_MAX_PBUFFER_PIXELS_EXT        0x202E
#define WGL_MAX_PBUFFER_WIDTH_EXT         0x202F
#define WGL_MAX_PBUFFER_HEIGHT_EXT        0x2030
#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT     0x2031
#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT    0x2032
#define WGL_PBUFFER_LARGEST_EXT           0x2033
#define WGL_PBUFFER_WIDTH_EXT             0x2034
#define WGL_PBUFFER_HEIGHT_EXT            0x2035
#endif /* ANYGL_NO_DEFINES */

typedef HPBUFFEREXT (APIENTRY* PFNANYWGLCREATEPBUFFEREXTPROC)(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
typedef HDC (APIENTRY* PFNANYWGLGETPBUFFERDCEXTPROC)(HPBUFFEREXT hPbuffer);
typedef int (APIENTRY* PFNANYWGLRELEASEPBUFFERDCEXTPROC)(HPBUFFEREXT hPbuffer, HDC hDC);
typedef BOOL (APIENTRY* PFNANYWGLDESTROYPBUFFEREXTPROC)(HPBUFFEREXT hPbuffer);
typedef BOOL (APIENTRY* PFNANYWGLQUERYPBUFFEREXTPROC)(HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);

ANYGL_EXPORT extern PFNANYWGLCREATEPBUFFEREXTPROC AnyGL_wglCreatePbufferEXT;
ANYGL_EXPORT extern PFNANYWGLGETPBUFFERDCEXTPROC AnyGL_wglGetPbufferDCEXT;
ANYGL_EXPORT extern PFNANYWGLRELEASEPBUFFERDCEXTPROC AnyGL_wglReleasePbufferDCEXT;
ANYGL_EXPORT extern PFNANYWGLDESTROYPBUFFEREXTPROC AnyGL_wglDestroyPbufferEXT;
ANYGL_EXPORT extern PFNANYWGLQUERYPBUFFEREXTPROC AnyGL_wglQueryPbufferEXT;

#ifndef ANYGL_NO_DEFINES
#define wglCreatePbufferEXT(hDC, iPixelFormat, iWidth, iHeight, piAttribList) AnyGL_wglCreatePbufferEXT(hDC, iPixelFormat, iWidth, iHeight, piAttribList)
#define wglGetPbufferDCEXT(hPbuffer) AnyGL_wglGetPbufferDCEXT(hPbuffer)
#define wglReleasePbufferDCEXT(hPbuffer, hDC) AnyGL_wglReleasePbufferDCEXT(hPbuffer, hDC)
#define wglDestroyPbufferEXT(hPbuffer) AnyGL_wglDestroyPbufferEXT(hPbuffer)
#define wglQueryPbufferEXT(hPbuffer, iAttribute, piValue) AnyGL_wglQueryPbufferEXT(hPbuffer, iAttribute, piValue)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_pixel_format
#define WGL_EXT_pixel_format 1
#define ANYWGL_EXT_pixel_format 1


#endif /* WGL_EXT_pixel_format */
#ifndef ANYGL_NO_DEFINES
#define WGL_NUMBER_PIXEL_FORMATS_EXT      0x2000
#define WGL_DRAW_TO_WINDOW_EXT            0x2001
#define WGL_DRAW_TO_BITMAP_EXT            0x2002
#define WGL_ACCELERATION_EXT              0x2003
#define WGL_NEED_PALETTE_EXT              0x2004
#define WGL_NEED_SYSTEM_PALETTE_EXT       0x2005
#define WGL_SWAP_LAYER_BUFFERS_EXT        0x2006
#define WGL_SWAP_METHOD_EXT               0x2007
#define WGL_NUMBER_OVERLAYS_EXT           0x2008
#define WGL_NUMBER_UNDERLAYS_EXT          0x2009
#define WGL_TRANSPARENT_EXT               0x200A
#define WGL_TRANSPARENT_VALUE_EXT         0x200B
#define WGL_SHARE_DEPTH_EXT               0x200C
#define WGL_SHARE_STENCIL_EXT             0x200D
#define WGL_SHARE_ACCUM_EXT               0x200E
#define WGL_SUPPORT_GDI_EXT               0x200F
#define WGL_SUPPORT_OPENGL_EXT            0x2010
#define WGL_DOUBLE_BUFFER_EXT             0x2011
#define WGL_STEREO_EXT                    0x2012
#define WGL_PIXEL_TYPE_EXT                0x2013
#define WGL_COLOR_BITS_EXT                0x2014
#define WGL_RED_BITS_EXT                  0x2015
#define WGL_RED_SHIFT_EXT                 0x2016
#define WGL_GREEN_BITS_EXT                0x2017
#define WGL_GREEN_SHIFT_EXT               0x2018
#define WGL_BLUE_BITS_EXT                 0x2019
#define WGL_BLUE_SHIFT_EXT                0x201A
#define WGL_ALPHA_BITS_EXT                0x201B
#define WGL_ALPHA_SHIFT_EXT               0x201C
#define WGL_ACCUM_BITS_EXT                0x201D
#define WGL_ACCUM_RED_BITS_EXT            0x201E
#define WGL_ACCUM_GREEN_BITS_EXT          0x201F
#define WGL_ACCUM_BLUE_BITS_EXT           0x2020
#define WGL_ACCUM_ALPHA_BITS_EXT          0x2021
#define WGL_DEPTH_BITS_EXT                0x2022
#define WGL_STENCIL_BITS_EXT              0x2023
#define WGL_AUX_BUFFERS_EXT               0x2024
#define WGL_NO_ACCELERATION_EXT           0x2025
#define WGL_GENERIC_ACCELERATION_EXT      0x2026
#define WGL_FULL_ACCELERATION_EXT         0x2027
#define WGL_SWAP_EXCHANGE_EXT             0x2028
#define WGL_SWAP_COPY_EXT                 0x2029
#define WGL_SWAP_UNDEFINED_EXT            0x202A
#define WGL_TYPE_RGBA_EXT                 0x202B
#define WGL_TYPE_COLORINDEX_EXT           0x202C
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLGETPIXELFORMATATTRIBIVEXTPROC)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);
typedef BOOL (APIENTRY* PFNANYWGLGETPIXELFORMATATTRIBFVEXTPROC)(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);
typedef BOOL (APIENTRY* PFNANYWGLCHOOSEPIXELFORMATEXTPROC)(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);

ANYGL_EXPORT extern PFNANYWGLGETPIXELFORMATATTRIBIVEXTPROC AnyGL_wglGetPixelFormatAttribivEXT;
ANYGL_EXPORT extern PFNANYWGLGETPIXELFORMATATTRIBFVEXTPROC AnyGL_wglGetPixelFormatAttribfvEXT;
ANYGL_EXPORT extern PFNANYWGLCHOOSEPIXELFORMATEXTPROC AnyGL_wglChoosePixelFormatEXT;

#ifndef ANYGL_NO_DEFINES
#define wglGetPixelFormatAttribivEXT(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues) AnyGL_wglGetPixelFormatAttribivEXT(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues)
#define wglGetPixelFormatAttribfvEXT(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues) AnyGL_wglGetPixelFormatAttribfvEXT(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues)
#define wglChoosePixelFormatEXT(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats) AnyGL_wglChoosePixelFormatEXT(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_pixel_format_packed_float
#define WGL_EXT_pixel_format_packed_float 1
#define ANYWGL_EXT_pixel_format_packed_float 1


#endif /* WGL_EXT_pixel_format_packed_float */
#ifndef ANYGL_NO_DEFINES
#define WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT  0x20A8
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_swap_control
#define WGL_EXT_swap_control 1
#define ANYWGL_EXT_swap_control 1


#endif /* WGL_EXT_swap_control */
typedef BOOL (APIENTRY* PFNANYWGLSWAPINTERVALEXTPROC)(int interval);
typedef int (APIENTRY* PFNANYWGLGETSWAPINTERVALEXTPROC)();

ANYGL_EXPORT extern PFNANYWGLSWAPINTERVALEXTPROC AnyGL_wglSwapIntervalEXT;
ANYGL_EXPORT extern PFNANYWGLGETSWAPINTERVALEXTPROC AnyGL_wglGetSwapIntervalEXT;

#ifndef ANYGL_NO_DEFINES
#define wglSwapIntervalEXT(interval) AnyGL_wglSwapIntervalEXT(interval)
#define wglGetSwapIntervalEXT() AnyGL_wglGetSwapIntervalEXT()
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_EXT_swap_control_tear
#define WGL_EXT_swap_control_tear 1
#define ANYWGL_EXT_swap_control_tear 1


#endif /* WGL_EXT_swap_control_tear */

#ifndef WGL_I3D_digital_video_control
#define WGL_I3D_digital_video_control 1
#define ANYWGL_I3D_digital_video_control 1


#endif /* WGL_I3D_digital_video_control */
#ifndef ANYGL_NO_DEFINES
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D 0x2050
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D 0x2051
#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D 0x2052
#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D 0x2053
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLGETDIGITALVIDEOPARAMETERSI3DPROC)(HDC hDC, int iAttribute, int *piValue);
typedef BOOL (APIENTRY* PFNANYWGLSETDIGITALVIDEOPARAMETERSI3DPROC)(HDC hDC, int iAttribute, const int *piValue);

ANYGL_EXPORT extern PFNANYWGLGETDIGITALVIDEOPARAMETERSI3DPROC AnyGL_wglGetDigitalVideoParametersI3D;
ANYGL_EXPORT extern PFNANYWGLSETDIGITALVIDEOPARAMETERSI3DPROC AnyGL_wglSetDigitalVideoParametersI3D;

#ifndef ANYGL_NO_DEFINES
#define wglGetDigitalVideoParametersI3D(hDC, iAttribute, piValue) AnyGL_wglGetDigitalVideoParametersI3D(hDC, iAttribute, piValue)
#define wglSetDigitalVideoParametersI3D(hDC, iAttribute, piValue) AnyGL_wglSetDigitalVideoParametersI3D(hDC, iAttribute, piValue)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_I3D_gamma
#define WGL_I3D_gamma 1
#define ANYWGL_I3D_gamma 1


#endif /* WGL_I3D_gamma */
#ifndef ANYGL_NO_DEFINES
#define WGL_GAMMA_TABLE_SIZE_I3D          0x204E
#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D     0x204F
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLGETGAMMATABLEPARAMETERSI3DPROC)(HDC hDC, int iAttribute, int *piValue);
typedef BOOL (APIENTRY* PFNANYWGLSETGAMMATABLEPARAMETERSI3DPROC)(HDC hDC, int iAttribute, const int *piValue);
typedef BOOL (APIENTRY* PFNANYWGLGETGAMMATABLEI3DPROC)(HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);
typedef BOOL (APIENTRY* PFNANYWGLSETGAMMATABLEI3DPROC)(HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);

ANYGL_EXPORT extern PFNANYWGLGETGAMMATABLEPARAMETERSI3DPROC AnyGL_wglGetGammaTableParametersI3D;
ANYGL_EXPORT extern PFNANYWGLSETGAMMATABLEPARAMETERSI3DPROC AnyGL_wglSetGammaTableParametersI3D;
ANYGL_EXPORT extern PFNANYWGLGETGAMMATABLEI3DPROC AnyGL_wglGetGammaTableI3D;
ANYGL_EXPORT extern PFNANYWGLSETGAMMATABLEI3DPROC AnyGL_wglSetGammaTableI3D;

#ifndef ANYGL_NO_DEFINES
#define wglGetGammaTableParametersI3D(hDC, iAttribute, piValue) AnyGL_wglGetGammaTableParametersI3D(hDC, iAttribute, piValue)
#define wglSetGammaTableParametersI3D(hDC, iAttribute, piValue) AnyGL_wglSetGammaTableParametersI3D(hDC, iAttribute, piValue)
#define wglGetGammaTableI3D(hDC, iEntries, puRed, puGreen, puBlue) AnyGL_wglGetGammaTableI3D(hDC, iEntries, puRed, puGreen, puBlue)
#define wglSetGammaTableI3D(hDC, iEntries, puRed, puGreen, puBlue) AnyGL_wglSetGammaTableI3D(hDC, iEntries, puRed, puGreen, puBlue)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_I3D_genlock
#define WGL_I3D_genlock 1
#define ANYWGL_I3D_genlock 1


#endif /* WGL_I3D_genlock */
#ifndef ANYGL_NO_DEFINES
#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D  0x2044
#define WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D 0x2045
#define WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D 0x2046
#define WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D 0x2047
#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D 0x2048
#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D 0x2049
#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D 0x204A
#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D 0x204B
#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D  0x204C
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLENABLEGENLOCKI3DPROC)(HDC hDC);
typedef BOOL (APIENTRY* PFNANYWGLDISABLEGENLOCKI3DPROC)(HDC hDC);
typedef BOOL (APIENTRY* PFNANYWGLISENABLEDGENLOCKI3DPROC)(HDC hDC, BOOL *pFlag);
typedef BOOL (APIENTRY* PFNANYWGLGENLOCKSOURCEI3DPROC)(HDC hDC, UINT uSource);
typedef BOOL (APIENTRY* PFNANYWGLGETGENLOCKSOURCEI3DPROC)(HDC hDC, UINT *uSource);
typedef BOOL (APIENTRY* PFNANYWGLGENLOCKSOURCEEDGEI3DPROC)(HDC hDC, UINT uEdge);
typedef BOOL (APIENTRY* PFNANYWGLGETGENLOCKSOURCEEDGEI3DPROC)(HDC hDC, UINT *uEdge);
typedef BOOL (APIENTRY* PFNANYWGLGENLOCKSAMPLERATEI3DPROC)(HDC hDC, UINT uRate);
typedef BOOL (APIENTRY* PFNANYWGLGETGENLOCKSAMPLERATEI3DPROC)(HDC hDC, UINT *uRate);
typedef BOOL (APIENTRY* PFNANYWGLGENLOCKSOURCEDELAYI3DPROC)(HDC hDC, UINT uDelay);
typedef BOOL (APIENTRY* PFNANYWGLGETGENLOCKSOURCEDELAYI3DPROC)(HDC hDC, UINT *uDelay);
typedef BOOL (APIENTRY* PFNANYWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC)(HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);

ANYGL_EXPORT extern PFNANYWGLENABLEGENLOCKI3DPROC AnyGL_wglEnableGenlockI3D;
ANYGL_EXPORT extern PFNANYWGLDISABLEGENLOCKI3DPROC AnyGL_wglDisableGenlockI3D;
ANYGL_EXPORT extern PFNANYWGLISENABLEDGENLOCKI3DPROC AnyGL_wglIsEnabledGenlockI3D;
ANYGL_EXPORT extern PFNANYWGLGENLOCKSOURCEI3DPROC AnyGL_wglGenlockSourceI3D;
ANYGL_EXPORT extern PFNANYWGLGETGENLOCKSOURCEI3DPROC AnyGL_wglGetGenlockSourceI3D;
ANYGL_EXPORT extern PFNANYWGLGENLOCKSOURCEEDGEI3DPROC AnyGL_wglGenlockSourceEdgeI3D;
ANYGL_EXPORT extern PFNANYWGLGETGENLOCKSOURCEEDGEI3DPROC AnyGL_wglGetGenlockSourceEdgeI3D;
ANYGL_EXPORT extern PFNANYWGLGENLOCKSAMPLERATEI3DPROC AnyGL_wglGenlockSampleRateI3D;
ANYGL_EXPORT extern PFNANYWGLGETGENLOCKSAMPLERATEI3DPROC AnyGL_wglGetGenlockSampleRateI3D;
ANYGL_EXPORT extern PFNANYWGLGENLOCKSOURCEDELAYI3DPROC AnyGL_wglGenlockSourceDelayI3D;
ANYGL_EXPORT extern PFNANYWGLGETGENLOCKSOURCEDELAYI3DPROC AnyGL_wglGetGenlockSourceDelayI3D;
ANYGL_EXPORT extern PFNANYWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC AnyGL_wglQueryGenlockMaxSourceDelayI3D;

#ifndef ANYGL_NO_DEFINES
#define wglEnableGenlockI3D(hDC) AnyGL_wglEnableGenlockI3D(hDC)
#define wglDisableGenlockI3D(hDC) AnyGL_wglDisableGenlockI3D(hDC)
#define wglIsEnabledGenlockI3D(hDC, pFlag) AnyGL_wglIsEnabledGenlockI3D(hDC, pFlag)
#define wglGenlockSourceI3D(hDC, uSource) AnyGL_wglGenlockSourceI3D(hDC, uSource)
#define wglGetGenlockSourceI3D(hDC, uSource) AnyGL_wglGetGenlockSourceI3D(hDC, uSource)
#define wglGenlockSourceEdgeI3D(hDC, uEdge) AnyGL_wglGenlockSourceEdgeI3D(hDC, uEdge)
#define wglGetGenlockSourceEdgeI3D(hDC, uEdge) AnyGL_wglGetGenlockSourceEdgeI3D(hDC, uEdge)
#define wglGenlockSampleRateI3D(hDC, uRate) AnyGL_wglGenlockSampleRateI3D(hDC, uRate)
#define wglGetGenlockSampleRateI3D(hDC, uRate) AnyGL_wglGetGenlockSampleRateI3D(hDC, uRate)
#define wglGenlockSourceDelayI3D(hDC, uDelay) AnyGL_wglGenlockSourceDelayI3D(hDC, uDelay)
#define wglGetGenlockSourceDelayI3D(hDC, uDelay) AnyGL_wglGetGenlockSourceDelayI3D(hDC, uDelay)
#define wglQueryGenlockMaxSourceDelayI3D(hDC, uMaxLineDelay, uMaxPixelDelay) AnyGL_wglQueryGenlockMaxSourceDelayI3D(hDC, uMaxLineDelay, uMaxPixelDelay)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_I3D_image_buffer
#define WGL_I3D_image_buffer 1
#define ANYWGL_I3D_image_buffer 1


#endif /* WGL_I3D_image_buffer */
#ifndef ANYGL_NO_DEFINES
#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D   0x00000001
#define WGL_IMAGE_BUFFER_LOCK_I3D         0x00000002
#endif /* ANYGL_NO_DEFINES */

typedef LPVOID (APIENTRY* PFNANYWGLCREATEIMAGEBUFFERI3DPROC)(HDC hDC, DWORD dwSize, UINT uFlags);
typedef BOOL (APIENTRY* PFNANYWGLDESTROYIMAGEBUFFERI3DPROC)(HDC hDC, LPVOID pAddress);
typedef BOOL (APIENTRY* PFNANYWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC)(HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
typedef BOOL (APIENTRY* PFNANYWGLRELEASEIMAGEBUFFEREVENTSI3DPROC)(HDC hDC, const LPVOID *pAddress, UINT count);

ANYGL_EXPORT extern PFNANYWGLCREATEIMAGEBUFFERI3DPROC AnyGL_wglCreateImageBufferI3D;
ANYGL_EXPORT extern PFNANYWGLDESTROYIMAGEBUFFERI3DPROC AnyGL_wglDestroyImageBufferI3D;
ANYGL_EXPORT extern PFNANYWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC AnyGL_wglAssociateImageBufferEventsI3D;
ANYGL_EXPORT extern PFNANYWGLRELEASEIMAGEBUFFEREVENTSI3DPROC AnyGL_wglReleaseImageBufferEventsI3D;

#ifndef ANYGL_NO_DEFINES
#define wglCreateImageBufferI3D(hDC, dwSize, uFlags) AnyGL_wglCreateImageBufferI3D(hDC, dwSize, uFlags)
#define wglDestroyImageBufferI3D(hDC, pAddress) AnyGL_wglDestroyImageBufferI3D(hDC, pAddress)
#define wglAssociateImageBufferEventsI3D(hDC, pEvent, pAddress, pSize, count) AnyGL_wglAssociateImageBufferEventsI3D(hDC, pEvent, pAddress, pSize, count)
#define wglReleaseImageBufferEventsI3D(hDC, pAddress, count) AnyGL_wglReleaseImageBufferEventsI3D(hDC, pAddress, count)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_I3D_swap_frame_lock
#define WGL_I3D_swap_frame_lock 1
#define ANYWGL_I3D_swap_frame_lock 1


#endif /* WGL_I3D_swap_frame_lock */
typedef BOOL (APIENTRY* PFNANYWGLENABLEFRAMELOCKI3DPROC)();
typedef BOOL (APIENTRY* PFNANYWGLDISABLEFRAMELOCKI3DPROC)();
typedef BOOL (APIENTRY* PFNANYWGLISENABLEDFRAMELOCKI3DPROC)(BOOL *pFlag);
typedef BOOL (APIENTRY* PFNANYWGLQUERYFRAMELOCKMASTERI3DPROC)(BOOL *pFlag);

ANYGL_EXPORT extern PFNANYWGLENABLEFRAMELOCKI3DPROC AnyGL_wglEnableFrameLockI3D;
ANYGL_EXPORT extern PFNANYWGLDISABLEFRAMELOCKI3DPROC AnyGL_wglDisableFrameLockI3D;
ANYGL_EXPORT extern PFNANYWGLISENABLEDFRAMELOCKI3DPROC AnyGL_wglIsEnabledFrameLockI3D;
ANYGL_EXPORT extern PFNANYWGLQUERYFRAMELOCKMASTERI3DPROC AnyGL_wglQueryFrameLockMasterI3D;

#ifndef ANYGL_NO_DEFINES
#define wglEnableFrameLockI3D() AnyGL_wglEnableFrameLockI3D()
#define wglDisableFrameLockI3D() AnyGL_wglDisableFrameLockI3D()
#define wglIsEnabledFrameLockI3D(pFlag) AnyGL_wglIsEnabledFrameLockI3D(pFlag)
#define wglQueryFrameLockMasterI3D(pFlag) AnyGL_wglQueryFrameLockMasterI3D(pFlag)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_I3D_swap_frame_usage
#define WGL_I3D_swap_frame_usage 1
#define ANYWGL_I3D_swap_frame_usage 1


#endif /* WGL_I3D_swap_frame_usage */
typedef BOOL (APIENTRY* PFNANYWGLGETFRAMEUSAGEI3DPROC)(float *pUsage);
typedef BOOL (APIENTRY* PFNANYWGLBEGINFRAMETRACKINGI3DPROC)();
typedef BOOL (APIENTRY* PFNANYWGLENDFRAMETRACKINGI3DPROC)();
typedef BOOL (APIENTRY* PFNANYWGLQUERYFRAMETRACKINGI3DPROC)(DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);

ANYGL_EXPORT extern PFNANYWGLGETFRAMEUSAGEI3DPROC AnyGL_wglGetFrameUsageI3D;
ANYGL_EXPORT extern PFNANYWGLBEGINFRAMETRACKINGI3DPROC AnyGL_wglBeginFrameTrackingI3D;
ANYGL_EXPORT extern PFNANYWGLENDFRAMETRACKINGI3DPROC AnyGL_wglEndFrameTrackingI3D;
ANYGL_EXPORT extern PFNANYWGLQUERYFRAMETRACKINGI3DPROC AnyGL_wglQueryFrameTrackingI3D;

#ifndef ANYGL_NO_DEFINES
#define wglGetFrameUsageI3D(pUsage) AnyGL_wglGetFrameUsageI3D(pUsage)
#define wglBeginFrameTrackingI3D() AnyGL_wglBeginFrameTrackingI3D()
#define wglEndFrameTrackingI3D() AnyGL_wglEndFrameTrackingI3D()
#define wglQueryFrameTrackingI3D(pFrameCount, pMissedFrames, pLastMissedUsage) AnyGL_wglQueryFrameTrackingI3D(pFrameCount, pMissedFrames, pLastMissedUsage)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_DX_interop
#define WGL_NV_DX_interop 1
#define ANYWGL_NV_DX_interop 1


#endif /* WGL_NV_DX_interop */
#ifndef ANYGL_NO_DEFINES
#define WGL_ACCESS_READ_ONLY_NV           0x00000000
#define WGL_ACCESS_READ_WRITE_NV          0x00000001
#define WGL_ACCESS_WRITE_DISCARD_NV       0x00000002
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLDXSETRESOURCESHAREHANDLENVPROC)(void *dxObject, HANDLE shareHandle);
typedef HANDLE (APIENTRY* PFNANYWGLDXOPENDEVICENVPROC)(void *dxDevice);
typedef BOOL (APIENTRY* PFNANYWGLDXCLOSEDEVICENVPROC)(HANDLE hDevice);
typedef HANDLE (APIENTRY* PFNANYWGLDXREGISTEROBJECTNVPROC)(HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
typedef BOOL (APIENTRY* PFNANYWGLDXUNREGISTEROBJECTNVPROC)(HANDLE hDevice, HANDLE hObject);
typedef BOOL (APIENTRY* PFNANYWGLDXOBJECTACCESSNVPROC)(HANDLE hObject, GLenum access);
typedef BOOL (APIENTRY* PFNANYWGLDXLOCKOBJECTSNVPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);
typedef BOOL (APIENTRY* PFNANYWGLDXUNLOCKOBJECTSNVPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);

ANYGL_EXPORT extern PFNANYWGLDXSETRESOURCESHAREHANDLENVPROC AnyGL_wglDXSetResourceShareHandleNV;
ANYGL_EXPORT extern PFNANYWGLDXOPENDEVICENVPROC AnyGL_wglDXOpenDeviceNV;
ANYGL_EXPORT extern PFNANYWGLDXCLOSEDEVICENVPROC AnyGL_wglDXCloseDeviceNV;
ANYGL_EXPORT extern PFNANYWGLDXREGISTEROBJECTNVPROC AnyGL_wglDXRegisterObjectNV;
ANYGL_EXPORT extern PFNANYWGLDXUNREGISTEROBJECTNVPROC AnyGL_wglDXUnregisterObjectNV;
ANYGL_EXPORT extern PFNANYWGLDXOBJECTACCESSNVPROC AnyGL_wglDXObjectAccessNV;
ANYGL_EXPORT extern PFNANYWGLDXLOCKOBJECTSNVPROC AnyGL_wglDXLockObjectsNV;
ANYGL_EXPORT extern PFNANYWGLDXUNLOCKOBJECTSNVPROC AnyGL_wglDXUnlockObjectsNV;

#ifndef ANYGL_NO_DEFINES
#define wglDXSetResourceShareHandleNV(dxObject, shareHandle) AnyGL_wglDXSetResourceShareHandleNV(dxObject, shareHandle)
#define wglDXOpenDeviceNV(dxDevice) AnyGL_wglDXOpenDeviceNV(dxDevice)
#define wglDXCloseDeviceNV(hDevice) AnyGL_wglDXCloseDeviceNV(hDevice)
#define wglDXRegisterObjectNV(hDevice, dxObject, name, type, access) AnyGL_wglDXRegisterObjectNV(hDevice, dxObject, name, type, access)
#define wglDXUnregisterObjectNV(hDevice, hObject) AnyGL_wglDXUnregisterObjectNV(hDevice, hObject)
#define wglDXObjectAccessNV(hObject, access) AnyGL_wglDXObjectAccessNV(hObject, access)
#define wglDXLockObjectsNV(hDevice, count, hObjects) AnyGL_wglDXLockObjectsNV(hDevice, count, hObjects)
#define wglDXUnlockObjectsNV(hDevice, count, hObjects) AnyGL_wglDXUnlockObjectsNV(hDevice, count, hObjects)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_DX_interop2
#define WGL_NV_DX_interop2 1
#define ANYWGL_NV_DX_interop2 1


#endif /* WGL_NV_DX_interop2 */

#ifndef WGL_NV_copy_image
#define WGL_NV_copy_image 1
#define ANYWGL_NV_copy_image 1


#endif /* WGL_NV_copy_image */
typedef BOOL (APIENTRY* PFNANYWGLCOPYIMAGESUBDATANVPROC)(HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);

ANYGL_EXPORT extern PFNANYWGLCOPYIMAGESUBDATANVPROC AnyGL_wglCopyImageSubDataNV;

#ifndef ANYGL_NO_DEFINES
#define wglCopyImageSubDataNV(hSrcRC, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, hDstRC, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth) AnyGL_wglCopyImageSubDataNV(hSrcRC, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, hDstRC, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_delay_before_swap
#define WGL_NV_delay_before_swap 1
#define ANYWGL_NV_delay_before_swap 1


#endif /* WGL_NV_delay_before_swap */
typedef BOOL (APIENTRY* PFNANYWGLDELAYBEFORESWAPNVPROC)(HDC hDC, GLfloat seconds);

ANYGL_EXPORT extern PFNANYWGLDELAYBEFORESWAPNVPROC AnyGL_wglDelayBeforeSwapNV;

#ifndef ANYGL_NO_DEFINES
#define wglDelayBeforeSwapNV(hDC, seconds) AnyGL_wglDelayBeforeSwapNV(hDC, seconds)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_float_buffer
#define WGL_NV_float_buffer 1
#define ANYWGL_NV_float_buffer 1


#endif /* WGL_NV_float_buffer */
#ifndef ANYGL_NO_DEFINES
#define WGL_FLOAT_COMPONENTS_NV           0x20B0
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV 0x20B1
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV 0x20B2
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV 0x20B3
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV 0x20B4
#define WGL_TEXTURE_FLOAT_R_NV            0x20B5
#define WGL_TEXTURE_FLOAT_RG_NV           0x20B6
#define WGL_TEXTURE_FLOAT_RGB_NV          0x20B7
#define WGL_TEXTURE_FLOAT_RGBA_NV         0x20B8
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_gpu_affinity
#define WGL_NV_gpu_affinity 1
#define ANYWGL_NV_gpu_affinity 1

DECLARE_HANDLE(HGPUNV);
struct _GPU_DEVICE {
    DWORD  cb;
    CHAR   DeviceName[32];
    CHAR   DeviceString[128];
    DWORD  Flags;
    RECT   rcVirtualScreen;
};
typedef struct _GPU_DEVICE *PGPU_DEVICE;

#endif /* WGL_NV_gpu_affinity */
#ifndef ANYGL_NO_DEFINES
#define ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV 0x20D0
#define ERROR_MISSING_AFFINITY_MASK_NV    0x20D1
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLENUMGPUSNVPROC)(UINT iGpuIndex, HGPUNV *phGpu);
typedef BOOL (APIENTRY* PFNANYWGLENUMGPUDEVICESNVPROC)(HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);
typedef HDC (APIENTRY* PFNANYWGLCREATEAFFINITYDCNVPROC)(const HGPUNV *phGpuList);
typedef BOOL (APIENTRY* PFNANYWGLENUMGPUSFROMAFFINITYDCNVPROC)(HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);
typedef BOOL (APIENTRY* PFNANYWGLDELETEDCNVPROC)(HDC hdc);

ANYGL_EXPORT extern PFNANYWGLENUMGPUSNVPROC AnyGL_wglEnumGpusNV;
ANYGL_EXPORT extern PFNANYWGLENUMGPUDEVICESNVPROC AnyGL_wglEnumGpuDevicesNV;
ANYGL_EXPORT extern PFNANYWGLCREATEAFFINITYDCNVPROC AnyGL_wglCreateAffinityDCNV;
ANYGL_EXPORT extern PFNANYWGLENUMGPUSFROMAFFINITYDCNVPROC AnyGL_wglEnumGpusFromAffinityDCNV;
ANYGL_EXPORT extern PFNANYWGLDELETEDCNVPROC AnyGL_wglDeleteDCNV;

#ifndef ANYGL_NO_DEFINES
#define wglEnumGpusNV(iGpuIndex, phGpu) AnyGL_wglEnumGpusNV(iGpuIndex, phGpu)
#define wglEnumGpuDevicesNV(hGpu, iDeviceIndex, lpGpuDevice) AnyGL_wglEnumGpuDevicesNV(hGpu, iDeviceIndex, lpGpuDevice)
#define wglCreateAffinityDCNV(phGpuList) AnyGL_wglCreateAffinityDCNV(phGpuList)
#define wglEnumGpusFromAffinityDCNV(hAffinityDC, iGpuIndex, hGpu) AnyGL_wglEnumGpusFromAffinityDCNV(hAffinityDC, iGpuIndex, hGpu)
#define wglDeleteDCNV(hdc) AnyGL_wglDeleteDCNV(hdc)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_multigpu_context
#define WGL_NV_multigpu_context 1
#define ANYWGL_NV_multigpu_context 1


#endif /* WGL_NV_multigpu_context */
#ifndef ANYGL_NO_DEFINES
#define WGL_CONTEXT_MULTIGPU_ATTRIB_NV    0x20AA
#define WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV 0x20AB
#define WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV 0x20AC
#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV 0x20AD
#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV 0x20AE
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_multisample_coverage
#define WGL_NV_multisample_coverage 1
#define ANYWGL_NV_multisample_coverage 1


#endif /* WGL_NV_multisample_coverage */
#ifndef ANYGL_NO_DEFINES
#define WGL_COVERAGE_SAMPLES_NV           0x2042
#define WGL_COLOR_SAMPLES_NV              0x20B9
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_present_video
#define WGL_NV_present_video 1
#define ANYWGL_NV_present_video 1

DECLARE_HANDLE(HVIDEOOUTPUTDEVICENV);

#endif /* WGL_NV_present_video */
#ifndef ANYGL_NO_DEFINES
#define WGL_NUM_VIDEO_SLOTS_NV            0x20F0
#endif /* ANYGL_NO_DEFINES */

typedef int (APIENTRY* PFNANYWGLENUMERATEVIDEODEVICESNVPROC)(HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);
typedef BOOL (APIENTRY* PFNANYWGLBINDVIDEODEVICENVPROC)(HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);
typedef BOOL (APIENTRY* PFNANYWGLQUERYCURRENTCONTEXTNVPROC)(int iAttribute, int *piValue);

ANYGL_EXPORT extern PFNANYWGLENUMERATEVIDEODEVICESNVPROC AnyGL_wglEnumerateVideoDevicesNV;
ANYGL_EXPORT extern PFNANYWGLBINDVIDEODEVICENVPROC AnyGL_wglBindVideoDeviceNV;
ANYGL_EXPORT extern PFNANYWGLQUERYCURRENTCONTEXTNVPROC AnyGL_wglQueryCurrentContextNV;

#ifndef ANYGL_NO_DEFINES
#define wglEnumerateVideoDevicesNV(hDc, phDeviceList) AnyGL_wglEnumerateVideoDevicesNV(hDc, phDeviceList)
#define wglBindVideoDeviceNV(hDc, uVideoSlot, hVideoDevice, piAttribList) AnyGL_wglBindVideoDeviceNV(hDc, uVideoSlot, hVideoDevice, piAttribList)
#define wglQueryCurrentContextNV(iAttribute, piValue) AnyGL_wglQueryCurrentContextNV(iAttribute, piValue)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_render_depth_texture
#define WGL_NV_render_depth_texture 1
#define ANYWGL_NV_render_depth_texture 1


#endif /* WGL_NV_render_depth_texture */
#ifndef ANYGL_NO_DEFINES
#define WGL_BIND_TO_TEXTURE_DEPTH_NV      0x20A3
#define WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV 0x20A4
#define WGL_DEPTH_TEXTURE_FORMAT_NV       0x20A5
#define WGL_TEXTURE_DEPTH_COMPONENT_NV    0x20A6
#define WGL_DEPTH_COMPONENT_NV            0x20A7
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_render_texture_rectangle
#define WGL_NV_render_texture_rectangle 1
#define ANYWGL_NV_render_texture_rectangle 1


#endif /* WGL_NV_render_texture_rectangle */
#ifndef ANYGL_NO_DEFINES
#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV 0x20A0
#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV 0x20A1
#define WGL_TEXTURE_RECTANGLE_NV          0x20A2
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_swap_group
#define WGL_NV_swap_group 1
#define ANYWGL_NV_swap_group 1


#endif /* WGL_NV_swap_group */
typedef BOOL (APIENTRY* PFNANYWGLJOINSWAPGROUPNVPROC)(HDC hDC, GLuint group);
typedef BOOL (APIENTRY* PFNANYWGLBINDSWAPBARRIERNVPROC)(GLuint group, GLuint barrier);
typedef BOOL (APIENTRY* PFNANYWGLQUERYSWAPGROUPNVPROC)(HDC hDC, GLuint *group, GLuint *barrier);
typedef BOOL (APIENTRY* PFNANYWGLQUERYMAXSWAPGROUPSNVPROC)(HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);
typedef BOOL (APIENTRY* PFNANYWGLQUERYFRAMECOUNTNVPROC)(HDC hDC, GLuint *count);
typedef BOOL (APIENTRY* PFNANYWGLRESETFRAMECOUNTNVPROC)(HDC hDC);

ANYGL_EXPORT extern PFNANYWGLJOINSWAPGROUPNVPROC AnyGL_wglJoinSwapGroupNV;
ANYGL_EXPORT extern PFNANYWGLBINDSWAPBARRIERNVPROC AnyGL_wglBindSwapBarrierNV;
ANYGL_EXPORT extern PFNANYWGLQUERYSWAPGROUPNVPROC AnyGL_wglQuerySwapGroupNV;
ANYGL_EXPORT extern PFNANYWGLQUERYMAXSWAPGROUPSNVPROC AnyGL_wglQueryMaxSwapGroupsNV;
ANYGL_EXPORT extern PFNANYWGLQUERYFRAMECOUNTNVPROC AnyGL_wglQueryFrameCountNV;
ANYGL_EXPORT extern PFNANYWGLRESETFRAMECOUNTNVPROC AnyGL_wglResetFrameCountNV;

#ifndef ANYGL_NO_DEFINES
#define wglJoinSwapGroupNV(hDC, group) AnyGL_wglJoinSwapGroupNV(hDC, group)
#define wglBindSwapBarrierNV(group, barrier) AnyGL_wglBindSwapBarrierNV(group, barrier)
#define wglQuerySwapGroupNV(hDC, group, barrier) AnyGL_wglQuerySwapGroupNV(hDC, group, barrier)
#define wglQueryMaxSwapGroupsNV(hDC, maxGroups, maxBarriers) AnyGL_wglQueryMaxSwapGroupsNV(hDC, maxGroups, maxBarriers)
#define wglQueryFrameCountNV(hDC, count) AnyGL_wglQueryFrameCountNV(hDC, count)
#define wglResetFrameCountNV(hDC) AnyGL_wglResetFrameCountNV(hDC)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_vertex_array_range
#define WGL_NV_vertex_array_range 1
#define ANYWGL_NV_vertex_array_range 1


#endif /* WGL_NV_vertex_array_range */
typedef void *(APIENTRY* PFNANYWGLALLOCATEMEMORYNVPROC)(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);
typedef void (APIENTRY* PFNANYWGLFREEMEMORYNVPROC)(void *pointer);

ANYGL_EXPORT extern PFNANYWGLALLOCATEMEMORYNVPROC AnyGL_wglAllocateMemoryNV;
ANYGL_EXPORT extern PFNANYWGLFREEMEMORYNVPROC AnyGL_wglFreeMemoryNV;

#ifndef ANYGL_NO_DEFINES
#define wglAllocateMemoryNV(size, readfreq, writefreq, priority) AnyGL_wglAllocateMemoryNV(size, readfreq, writefreq, priority)
#define wglFreeMemoryNV(pointer) AnyGL_wglFreeMemoryNV(pointer)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_video_capture
#define WGL_NV_video_capture 1
#define ANYWGL_NV_video_capture 1

DECLARE_HANDLE(HVIDEOINPUTDEVICENV);

#endif /* WGL_NV_video_capture */
#ifndef ANYGL_NO_DEFINES
#define WGL_UNIQUE_ID_NV                  0x20CE
#define WGL_NUM_VIDEO_CAPTURE_SLOTS_NV    0x20CF
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLBINDVIDEOCAPTUREDEVICENVPROC)(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);
typedef UINT (APIENTRY* PFNANYWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC)(HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);
typedef BOOL (APIENTRY* PFNANYWGLLOCKVIDEOCAPTUREDEVICENVPROC)(HDC hDc, HVIDEOINPUTDEVICENV hDevice);
typedef BOOL (APIENTRY* PFNANYWGLQUERYVIDEOCAPTUREDEVICENVPROC)(HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);
typedef BOOL (APIENTRY* PFNANYWGLRELEASEVIDEOCAPTUREDEVICENVPROC)(HDC hDc, HVIDEOINPUTDEVICENV hDevice);

ANYGL_EXPORT extern PFNANYWGLBINDVIDEOCAPTUREDEVICENVPROC AnyGL_wglBindVideoCaptureDeviceNV;
ANYGL_EXPORT extern PFNANYWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC AnyGL_wglEnumerateVideoCaptureDevicesNV;
ANYGL_EXPORT extern PFNANYWGLLOCKVIDEOCAPTUREDEVICENVPROC AnyGL_wglLockVideoCaptureDeviceNV;
ANYGL_EXPORT extern PFNANYWGLQUERYVIDEOCAPTUREDEVICENVPROC AnyGL_wglQueryVideoCaptureDeviceNV;
ANYGL_EXPORT extern PFNANYWGLRELEASEVIDEOCAPTUREDEVICENVPROC AnyGL_wglReleaseVideoCaptureDeviceNV;

#ifndef ANYGL_NO_DEFINES
#define wglBindVideoCaptureDeviceNV(uVideoSlot, hDevice) AnyGL_wglBindVideoCaptureDeviceNV(uVideoSlot, hDevice)
#define wglEnumerateVideoCaptureDevicesNV(hDc, phDeviceList) AnyGL_wglEnumerateVideoCaptureDevicesNV(hDc, phDeviceList)
#define wglLockVideoCaptureDeviceNV(hDc, hDevice) AnyGL_wglLockVideoCaptureDeviceNV(hDc, hDevice)
#define wglQueryVideoCaptureDeviceNV(hDc, hDevice, iAttribute, piValue) AnyGL_wglQueryVideoCaptureDeviceNV(hDc, hDevice, iAttribute, piValue)
#define wglReleaseVideoCaptureDeviceNV(hDc, hDevice) AnyGL_wglReleaseVideoCaptureDeviceNV(hDc, hDevice)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_NV_video_output
#define WGL_NV_video_output 1
#define ANYWGL_NV_video_output 1

DECLARE_HANDLE(HPVIDEODEV);

#endif /* WGL_NV_video_output */
#ifndef ANYGL_NO_DEFINES
#define WGL_BIND_TO_VIDEO_RGB_NV          0x20C0
#define WGL_BIND_TO_VIDEO_RGBA_NV         0x20C1
#define WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV 0x20C2
#define WGL_VIDEO_OUT_COLOR_NV            0x20C3
#define WGL_VIDEO_OUT_ALPHA_NV            0x20C4
#define WGL_VIDEO_OUT_DEPTH_NV            0x20C5
#define WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV  0x20C6
#define WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV  0x20C7
#define WGL_VIDEO_OUT_FRAME               0x20C8
#define WGL_VIDEO_OUT_FIELD_1             0x20C9
#define WGL_VIDEO_OUT_FIELD_2             0x20CA
#define WGL_VIDEO_OUT_STACKED_FIELDS_1_2  0x20CB
#define WGL_VIDEO_OUT_STACKED_FIELDS_2_1  0x20CC
#endif /* ANYGL_NO_DEFINES */

typedef BOOL (APIENTRY* PFNANYWGLGETVIDEODEVICENVPROC)(HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);
typedef BOOL (APIENTRY* PFNANYWGLRELEASEVIDEODEVICENVPROC)(HPVIDEODEV hVideoDevice);
typedef BOOL (APIENTRY* PFNANYWGLBINDVIDEOIMAGENVPROC)(HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);
typedef BOOL (APIENTRY* PFNANYWGLRELEASEVIDEOIMAGENVPROC)(HPBUFFERARB hPbuffer, int iVideoBuffer);
typedef BOOL (APIENTRY* PFNANYWGLSENDPBUFFERTOVIDEONVPROC)(HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);
typedef BOOL (APIENTRY* PFNANYWGLGETVIDEOINFONVPROC)(HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);

ANYGL_EXPORT extern PFNANYWGLGETVIDEODEVICENVPROC AnyGL_wglGetVideoDeviceNV;
ANYGL_EXPORT extern PFNANYWGLRELEASEVIDEODEVICENVPROC AnyGL_wglReleaseVideoDeviceNV;
ANYGL_EXPORT extern PFNANYWGLBINDVIDEOIMAGENVPROC AnyGL_wglBindVideoImageNV;
ANYGL_EXPORT extern PFNANYWGLRELEASEVIDEOIMAGENVPROC AnyGL_wglReleaseVideoImageNV;
ANYGL_EXPORT extern PFNANYWGLSENDPBUFFERTOVIDEONVPROC AnyGL_wglSendPbufferToVideoNV;
ANYGL_EXPORT extern PFNANYWGLGETVIDEOINFONVPROC AnyGL_wglGetVideoInfoNV;

#ifndef ANYGL_NO_DEFINES
#define wglGetVideoDeviceNV(hDC, numDevices, hVideoDevice) AnyGL_wglGetVideoDeviceNV(hDC, numDevices, hVideoDevice)
#define wglReleaseVideoDeviceNV(hVideoDevice) AnyGL_wglReleaseVideoDeviceNV(hVideoDevice)
#define wglBindVideoImageNV(hVideoDevice, hPbuffer, iVideoBuffer) AnyGL_wglBindVideoImageNV(hVideoDevice, hPbuffer, iVideoBuffer)
#define wglReleaseVideoImageNV(hPbuffer, iVideoBuffer) AnyGL_wglReleaseVideoImageNV(hPbuffer, iVideoBuffer)
#define wglSendPbufferToVideoNV(hPbuffer, iBufferType, pulCounterPbuffer, bBlock) AnyGL_wglSendPbufferToVideoNV(hPbuffer, iBufferType, pulCounterPbuffer, bBlock)
#define wglGetVideoInfoNV(hpVideoDevice, pulCounterOutputPbuffer, pulCounterOutputVideo) AnyGL_wglGetVideoInfoNV(hpVideoDevice, pulCounterOutputPbuffer, pulCounterOutputVideo)
#endif /* ANYGL_NO_DEFINES */

#ifndef WGL_OML_sync_control
#define WGL_OML_sync_control 1
#define ANYWGL_OML_sync_control 1


#endif /* WGL_OML_sync_control */
typedef BOOL (APIENTRY* PFNANYWGLGETSYNCVALUESOMLPROC)(HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);
typedef BOOL (APIENTRY* PFNANYWGLGETMSCRATEOMLPROC)(HDC hdc, INT32 *numerator, INT32 *denominator);
typedef INT64 (APIENTRY* PFNANYWGLSWAPBUFFERSMSCOMLPROC)(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);
typedef INT64 (APIENTRY* PFNANYWGLSWAPLAYERBUFFERSMSCOMLPROC)(HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);
typedef BOOL (APIENTRY* PFNANYWGLWAITFORMSCOMLPROC)(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);
typedef BOOL (APIENTRY* PFNANYWGLWAITFORSBCOMLPROC)(HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);

ANYGL_EXPORT extern PFNANYWGLGETSYNCVALUESOMLPROC AnyGL_wglGetSyncValuesOML;
ANYGL_EXPORT extern PFNANYWGLGETMSCRATEOMLPROC AnyGL_wglGetMscRateOML;
ANYGL_EXPORT extern PFNANYWGLSWAPBUFFERSMSCOMLPROC AnyGL_wglSwapBuffersMscOML;
ANYGL_EXPORT extern PFNANYWGLSWAPLAYERBUFFERSMSCOMLPROC AnyGL_wglSwapLayerBuffersMscOML;
ANYGL_EXPORT extern PFNANYWGLWAITFORMSCOMLPROC AnyGL_wglWaitForMscOML;
ANYGL_EXPORT extern PFNANYWGLWAITFORSBCOMLPROC AnyGL_wglWaitForSbcOML;

#ifndef ANYGL_NO_DEFINES
#define wglGetSyncValuesOML(hdc, ust, msc, sbc) AnyGL_wglGetSyncValuesOML(hdc, ust, msc, sbc)
#define wglGetMscRateOML(hdc, numerator, denominator) AnyGL_wglGetMscRateOML(hdc, numerator, denominator)
#define wglSwapBuffersMscOML(hdc, target_msc, divisor, remainder) AnyGL_wglSwapBuffersMscOML(hdc, target_msc, divisor, remainder)
#define wglSwapLayerBuffersMscOML(hdc, fuPlanes, target_msc, divisor, remainder) AnyGL_wglSwapLayerBuffersMscOML(hdc, fuPlanes, target_msc, divisor, remainder)
#define wglWaitForMscOML(hdc, target_msc, divisor, remainder, ust, msc, sbc) AnyGL_wglWaitForMscOML(hdc, target_msc, divisor, remainder, ust, msc, sbc)
#define wglWaitForSbcOML(hdc, target_sbc, ust, msc, sbc) AnyGL_wglWaitForSbcOML(hdc, target_sbc, ust, msc, sbc)
#endif /* ANYGL_NO_DEFINES */


#ifdef __cplusplus
}
#endif

#endif /* ANYGL_LOAD */

#endif
