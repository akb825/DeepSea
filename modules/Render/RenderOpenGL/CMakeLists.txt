if (DEEPSEA_PREFER_EGL)
	set(OpenGL_GL_PREFERENCE LEGACY)
else()
	set(OpenGL_GL_PREFERENCE GLVND)
endif()

set(extraLibs)
set(extraIncludeDirs)
set(extraDefines)
if (APPLE)
	set(extraLibs "-framework AppKit" "-framework OpenGL")
elseif (DEEPSEA_GLES OR ANDROID)
	find_package(EGL)
	if (NOT EGL_FOUND)
		message(FATAL_ERROR "OpenGL not found. Skipping RenderOpenGL.")
		return()
	endif()

	set(extraLibs ${EGL_LIBRARIES})
	set(extraIncludeDirs ${EGL_INCLUDE_DIRS})
	set(extraDefines PRIVATE ANYGL_GLES=1)
else()
	find_package(OpenGL)
	if (NOT OPENGL_FOUND)
		message("OpenGL not found. Skipping RenderOpenGL.")
		return()
	endif()

	set(extraLibs ${OPENGL_gl_LIBRARY})
	if (UNIX)
		find_package(EGL QUIET)
		if (DEEPSEA_PREFER_EGL AND EGL_FOUND)
			list(APPEND extraLibs ${EGL_LIBRARIES})
			set(extraIncludeDirs ${EGL_INCLUDE_DIRS})
			set(extraDefines PRIVATE ANYGL_FORCE_EGL=1)
		else()
			find_package(X11 REQUIRED)
			find_package(GLX REQUIRED)
			list(APPEND extraLibs ${X11_LIBRARIES} ${GLX_LIBRARIES})
			set(extraIncludeDirs ${X11_INCLUDE_DIRECTORIES} ${GLX_INCLUDE_DIRECTORIES})
		endif()
	endif()
endif()

include(${CMAKE_CURRENT_SOURCE_DIR}/msl-config/ConfigPaths.cmake)

set(extraPatterns)
if (APPLE)
	set(extraPatterns src/*.m)
endif()
file(GLOB_RECURSE sources src/*.c src/*.h include/*.h ${extraPatterns})
ds_add_library(deepsea_render_opengl MODULE RenderOpenGL FILES ${sources}
	DEPENDS deepsea_render)

ds_target_include_directories(deepsea_render_opengl
	PRIVATE ${OPENGL_INCLUDE_DIR} ${extraIncludeDirs} ${DEEPSEA_MODULE_DIR}/Render/RenderOpenGL/src)
ds_target_link_libraries(deepsea_render_opengl
	PRIVATE ${CMAKE_DL_LIBS} ${extraLibs} msl_client)
if (extraDefines)
	ds_target_compile_definitions(deepsea_render_opengl ${extraDefines})
endif()

file(GLOB shaderConfigs msl-config/*)
ds_install_library(TARGET deepsea_render_opengl MODULE RenderOpenGL DEPENDS Render
	CONFIG_FILES ${shaderConfigs}
	CONFIG_LINES "include(\${CMAKE_CURRENT_LIST_DIR}/ConfigPaths.cmake)")
